/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */
/*===========================================================================
 * 
 * Project : freyja
 * Author  : Terry 'Mongoose' Hendrix II
 * Website : http://www.icculus.org/freyja/
 * Email   : mongooseichiban@gmail.com
 * Object  : 
 * License : No use w/o permission (C) 2004-2006 Mongoose
 * Comments: This is the Python plugin ABI.
 *
 *           This file was generated by Mongoose's UpdateBindings.py
 *           - Mongoose <mongooseichiban@gmail.com>
 *
 * 2006.12.11:
 * Mongoose - Generated, Based on C ABI for freyja
 ==========================================================================*/

#ifdef USING_PYTHON
#include <python2.4/Python.h>
#include "SkeletonABI.h"
#include "KeyFrameABI.h"
#include "FreyjaPluginABI.h"
#include "ModelABI.h"
#include "BoneABI.h"
#include "LightABI.h"
#include "MaterialABI.h"
#include "PakABI.h"
#include "MeshABI.h"
#include "freyja.h"


PyObject *py_freyjaGetSkeletonCount(PyObject *self, PyObject *args)
{
	return PyInt_FromLong(freyjaGetSkeletonCount());
}


PyObject *py_freyjaKeyFrameGroupCreate(PyObject *self, PyObject *args)
{
	/* index_t */
	/* freyjaKeyFrameGroupCreate */
	/* index_t */
	/* start; */
	/* index_t */
	/* end */
	/* ; */


	index_t start;
	index_t end;

	if (!PyArg_ParseTuple(args, "ii", &start, &end))
		return NULL;

	return PyInt_FromLong(freyjaKeyFrameGroupCreate(start, end));
}


PyObject *py_freyjaGetKeyFrameCount(PyObject *self, PyObject *args)
{
	return PyInt_FromLong(freyjaGetKeyFrameCount());
}


PyObject *py_freyjaBoneDelete(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaBoneDelete */
	/* index_t */
	/* boneIndex */
	/* ; */


	index_t boneIndex;

	if (!PyArg_ParseTuple(args, "i", &boneIndex))
		return NULL;

	freyjaBoneDelete(boneIndex);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaBoneAddChild(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaBoneAddChild */
	/* index_t */
	/* boneIndex; */
	/* index_t */
	/* childIndex */
	/* ; */


	index_t boneIndex;
	index_t childIndex;

	if (!PyArg_ParseTuple(args, "ii", &boneIndex, &childIndex))
		return NULL;

	freyjaBoneAddChild(boneIndex, childIndex);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaBoneTranslate3fv(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaBoneTranslate3fv */
	/* index_t */
	/* boneIndex; */
	/* vec3_t */
	/* xyz */
	/* ; */


	index_t boneIndex;
	vec3_t xyz;

	if (!PyArg_ParseTuple(args, "ifff", &boneIndex, xyz+0, xyz+1, xyz+2))
		return NULL;

	freyjaBoneTranslate3fv(boneIndex, xyz);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaBoneRotateEuler3fv(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaBoneRotateEuler3fv */
	/* index_t */
	/* boneIndex; */
	/* vec3_t */
	/* phr */
	/* ; */


	index_t boneIndex;
	vec3_t phr;

	if (!PyArg_ParseTuple(args, "ifff", &boneIndex, phr+0, phr+1, phr+2))
		return NULL;

	freyjaBoneRotateEuler3fv(boneIndex, phr);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaBoneRotateQuat4f(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaBoneRotateQuat4f */
	/* index_t */
	/* boneIndex; */
	/* vec_t */
	/* w; */
	/* vec_t */
	/* x; */
	/* vec_t */
	/* y; */
	/* vec_t */
	/* z */
	/* ; */


	index_t boneIndex;
	vec_t w;
	vec_t x;
	vec_t y;
	vec_t z;

	if (!PyArg_ParseTuple(args, "iffff", &boneIndex, &w, &x, &y, &z))
		return NULL;

	freyjaBoneRotateQuat4f(boneIndex, w, x, y, z);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaBoneRotateQuat4fv(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaBoneRotateQuat4fv */
	/* index_t */
	/* boneIndex; */
	/* vec4_t */
	/* wxyz */
	/* ; */


	index_t boneIndex;
	vec4_t wxyz;

	if (!PyArg_ParseTuple(args, "iffff", &boneIndex, wxyz+0, wxyz+1, wxyz+2, wxyz+3))
		return NULL;

	freyjaBoneRotateQuat4fv(boneIndex, wxyz);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaGetBoneRotationEuler3fv(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaGetBoneRotationEuler3fv */
	/* index_t */
	/* boneIndex; */
	/* vec3_t */
	/* phr */
	/* ; */


	index_t boneIndex;
	vec3_t phr;

	if (!PyArg_ParseTuple(args, "ifff", &boneIndex, phr+0, phr+1, phr+2))
		return NULL;

	freyjaGetBoneRotationEuler3fv(boneIndex, phr);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaGetBoneParent(PyObject *self, PyObject *args)
{
	/* index_t */
	/* freyjaGetBoneParent */
	/* index_t */
	/* boneIndex */
	/* ; */


	index_t boneIndex;

	if (!PyArg_ParseTuple(args, "i", &boneIndex))
		return NULL;

	return PyInt_FromLong(freyjaGetBoneParent(boneIndex));
}


PyObject *py_freyjaBoneUpdateBindPose(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaBoneUpdateBindPose */
	/* index_t */
	/* bone */
	/* ; */


	index_t bone;

	if (!PyArg_ParseTuple(args, "i", &bone))
		return NULL;

	freyjaBoneUpdateBindPose(bone);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaBoneGetBindTransform(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaBoneGetBindTransform */
	/* index_t */
	/* bone; */
	/* matrix_t */
	/* m */
	/* ; */


	index_t bone;
	matrix_t m;

	if (!PyArg_ParseTuple(args, "iffffffffffffffff", &bone, m+0, m+1, m+2, m+3, m+4, m+5, m+6, m+7, m+8, m+9, m+10, m+11, m+12, m+13, m+14))
		return NULL;

	freyjaBoneGetBindTransform(bone, m);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaBoneGetBindTransformInverse(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaBoneGetBindTransformInverse */
	/* index_t */
	/* bone; */
	/* matrix_t */
	/* m */
	/* ; */


	index_t bone;
	matrix_t m;

	if (!PyArg_ParseTuple(args, "iffffffffffffffff", &bone, m+0, m+1, m+2, m+3, m+4, m+5, m+6, m+7, m+8, m+9, m+10, m+11, m+12, m+13, m+14))
		return NULL;

	freyjaBoneGetBindTransformInverse(bone, m);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaBoneBindTransformVertex(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaBoneBindTransformVertex */
	/* index_t */
	/* bone; */
	/* vec3_t */
	/* p; */
	/* vec_t */
	/* w */
	/* ; */


	index_t bone;
	vec3_t p;
	vec_t w;

	if (!PyArg_ParseTuple(args, "iffff", &bone, p+0, p+1, p+2, &w))
		return NULL;

	freyjaBoneBindTransformVertex(bone, p, w);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaBoneTrackNew(PyObject *self, PyObject *args)
{
	/* index_t */
	/* freyjaBoneTrackNew */
	/* index_t */
	/* bone */
	/* ; */


	index_t bone;

	if (!PyArg_ParseTuple(args, "i", &bone))
		return NULL;

	return PyInt_FromLong(freyjaBoneTrackNew(bone));
}


PyObject *py_freyjaBoneTrackDuration(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaBoneTrackDuration */
	/* index_t */
	/* bone; */
	/* index_t */
	/* track; */
	/* vec_t */
	/* duration */
	/* ; */


	index_t bone;
	index_t track;
	vec_t duration;

	if (!PyArg_ParseTuple(args, "iif", &bone, &track, &duration))
		return NULL;

	freyjaBoneTrackDuration(bone, track, duration);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaBoneTrackRate(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaBoneTrackRate */
	/* index_t */
	/* bone; */
	/* index_t */
	/* track; */
	/* vec_t */
	/* fps */
	/* ; */


	index_t bone;
	index_t track;
	vec_t fps;

	if (!PyArg_ParseTuple(args, "iif", &bone, &track, &fps))
		return NULL;

	freyjaBoneTrackRate(bone, track, fps);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaBoneKeyFrameNew(PyObject *self, PyObject *args)
{
	/* index_t */
	/* freyjaBoneKeyFrameNew */
	/* index_t */
	/* bone; */
	/* index_t */
	/* track; */
	/* vec_t */
	/* time */
	/* ; */


	index_t bone;
	index_t track;
	vec_t time;

	if (!PyArg_ParseTuple(args, "iif", &bone, &track, &time))
		return NULL;

	return PyInt_FromLong(freyjaBoneKeyFrameNew(bone, track, time));
}


PyObject *py_freyjaBonePosKeyFrame3f(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaBonePosKeyFrame3f */
	/* index_t */
	/* bone; */
	/* index_t */
	/* track; */
	/* index_t */
	/* key; */
	/* vec_t */
	/* x; */
	/* vec_t */
	/* y; */
	/* vec_t */
	/* z */
	/* ; */


	index_t bone;
	index_t track;
	index_t key;
	vec_t x;
	vec_t y;
	vec_t z;

	if (!PyArg_ParseTuple(args, "iiifff", &bone, &track, &key, &x, &y, &z))
		return NULL;

	freyjaBonePosKeyFrame3f(bone, track, key, x, y, z);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaBoneRotKeyFrameEuler3f(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaBoneRotKeyFrameEuler3f */
	/* index_t */
	/* bone; */
	/* index_t */
	/* track; */
	/* index_t */
	/* key; */
	/* vec_t */
	/* x; */
	/* vec_t */
	/* y; */
	/* vec_t */
	/* z */
	/* ; */


	index_t bone;
	index_t track;
	index_t key;
	vec_t x;
	vec_t y;
	vec_t z;

	if (!PyArg_ParseTuple(args, "iiifff", &bone, &track, &key, &x, &y, &z))
		return NULL;

	freyjaBoneRotKeyFrameEuler3f(bone, track, key, x, y, z);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaBoneRotKeyFrameQuat4f(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaBoneRotKeyFrameQuat4f */
	/* index_t */
	/* bone; */
	/* index_t */
	/* track; */
	/* index_t */
	/* key; */
	/* vec_t */
	/* w; */
	/* vec_t */
	/* x; */
	/* vec_t */
	/* y; */
	/* vec_t */
	/* z */
	/* ; */


	index_t bone;
	index_t track;
	index_t key;
	vec_t w;
	vec_t x;
	vec_t y;
	vec_t z;

	if (!PyArg_ParseTuple(args, "iiiffff", &bone, &track, &key, &w, &x, &y, &z))
		return NULL;

	freyjaBoneRotKeyFrameQuat4f(bone, track, key, w, x, y, z);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaGetLightCount(PyObject *self, PyObject *args)
{
	return PyInt_FromLong(freyjaGetLightCount());
}


PyObject *py_freyjaLightDelete(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaLightDelete */
	/* index_t */
	/* lightIndex */
	/* ; */


	index_t lightIndex;

	if (!PyArg_ParseTuple(args, "i", &lightIndex))
		return NULL;

	freyjaLightDelete(lightIndex);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaLightPosition4v(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaLightPosition4v */
	/* index_t */
	/* lightIndex; */
	/* vec4_t */
	/* position */
	/* ; */


	index_t lightIndex;
	vec4_t position;

	if (!PyArg_ParseTuple(args, "iffff", &lightIndex, position+0, position+1, position+2, position+3))
		return NULL;

	freyjaLightPosition4v(lightIndex, position);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaLightAmbient(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaLightAmbient */
	/* index_t */
	/* lightIndex; */
	/* vec4_t */
	/* ambient */
	/* ; */


	index_t lightIndex;
	vec4_t ambient;

	if (!PyArg_ParseTuple(args, "iffff", &lightIndex, ambient+0, ambient+1, ambient+2, ambient+3))
		return NULL;

	freyjaLightAmbient(lightIndex, ambient);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaLightDiffuse(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaLightDiffuse */
	/* index_t */
	/* lightIndex; */
	/* vec4_t */
	/* diffuse */
	/* ; */


	index_t lightIndex;
	vec4_t diffuse;

	if (!PyArg_ParseTuple(args, "iffff", &lightIndex, diffuse+0, diffuse+1, diffuse+2, diffuse+3))
		return NULL;

	freyjaLightDiffuse(lightIndex, diffuse);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaLightSpecular(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaLightSpecular */
	/* index_t */
	/* lightIndex; */
	/* vec4_t */
	/* specular */
	/* ; */


	index_t lightIndex;
	vec4_t specular;

	if (!PyArg_ParseTuple(args, "iffff", &lightIndex, specular+0, specular+1, specular+2, specular+3))
		return NULL;

	freyjaLightSpecular(lightIndex, specular);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaGetLightPosition4v(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaGetLightPosition4v */
	/* index_t */
	/* lightIndex; */
	/* vec4_t */
	/* position */
	/* ; */


	index_t lightIndex;
	vec4_t position;

	if (!PyArg_ParseTuple(args, "iffff", &lightIndex, position+0, position+1, position+2, position+3))
		return NULL;

	freyjaGetLightPosition4v(lightIndex, position);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaGetLightAmbient(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaGetLightAmbient */
	/* index_t */
	/* lightIndex; */
	/* vec4_t */
	/* ambient */
	/* ; */


	index_t lightIndex;
	vec4_t ambient;

	if (!PyArg_ParseTuple(args, "iffff", &lightIndex, ambient+0, ambient+1, ambient+2, ambient+3))
		return NULL;

	freyjaGetLightAmbient(lightIndex, ambient);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaGetLightDiffuse(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaGetLightDiffuse */
	/* index_t */
	/* lightIndex; */
	/* vec4_t */
	/* diffuse */
	/* ; */


	index_t lightIndex;
	vec4_t diffuse;

	if (!PyArg_ParseTuple(args, "iffff", &lightIndex, diffuse+0, diffuse+1, diffuse+2, diffuse+3))
		return NULL;

	freyjaGetLightDiffuse(lightIndex, diffuse);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaGetLightSpecular(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaGetLightSpecular */
	/* index_t */
	/* lightIndex; */
	/* vec4_t */
	/* specular */
	/* ; */


	index_t lightIndex;
	vec4_t specular;

	if (!PyArg_ParseTuple(args, "iffff", &lightIndex, specular+0, specular+1, specular+2, specular+3))
		return NULL;

	freyjaGetLightSpecular(lightIndex, specular);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaGetMaterialIndex(PyObject *self, PyObject *args)
{
	/* index_t */
	/* freyjaGetMaterialIndex */
	/* index_t */
	/* material; */
	/* uint32 */
	/* element */
	/* ; */


	index_t material;
	uint32 element;

	if (!PyArg_ParseTuple(args, "ii", &material, &element))
		return NULL;

	return PyInt_FromLong(freyjaGetMaterialIndex(material, element));
}


PyObject *py_freyjaGetMaterialTexture(PyObject *self, PyObject *args)
{
	/* index_t */
	/* freyjaGetMaterialTexture */
	/* index_t */
	/* material */
	/* ; */


	index_t material;

	if (!PyArg_ParseTuple(args, "i", &material))
		return NULL;

	return PyInt_FromLong(freyjaGetMaterialTexture(material));
}


PyObject *py_freyjaGetMaterialTextureName(PyObject *self, PyObject *args)
{
	/* const */
	/* char* */
	/* freyjaGetMaterialTextureName */
	/* index_t */
	/* material */
	/* ; */


	index_t material;

	if (!PyArg_ParseTuple(args, "i", &material))
		return NULL;

	return PyString_FromString(freyjaGetMaterialTextureName(material));
}


PyObject *py_freyjaGetMaterialAmbient(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaGetMaterialAmbient */
	/* index_t */
	/* material; */
	/* vec4_t */
	/* ambient */
	/* ; */


	index_t material;
	vec4_t ambient;

	if (!PyArg_ParseTuple(args, "iffff", &material, ambient+0, ambient+1, ambient+2, ambient+3))
		return NULL;

	freyjaGetMaterialAmbient(material, ambient);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaGetMaterialDiffuse(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaGetMaterialDiffuse */
	/* index_t */
	/* material; */
	/* vec4_t */
	/* diffuse */
	/* ; */


	index_t material;
	vec4_t diffuse;

	if (!PyArg_ParseTuple(args, "iffff", &material, diffuse+0, diffuse+1, diffuse+2, diffuse+3))
		return NULL;

	freyjaGetMaterialDiffuse(material, diffuse);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaGetMaterialSpecular(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaGetMaterialSpecular */
	/* index_t */
	/* material; */
	/* vec4_t */
	/* specular */
	/* ; */


	index_t material;
	vec4_t specular;

	if (!PyArg_ParseTuple(args, "iffff", &material, specular+0, specular+1, specular+2, specular+3))
		return NULL;

	freyjaGetMaterialSpecular(material, specular);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaGetMaterialEmissive(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaGetMaterialEmissive */
	/* index_t */
	/* material; */
	/* vec4_t */
	/* emissive */
	/* ; */


	index_t material;
	vec4_t emissive;

	if (!PyArg_ParseTuple(args, "iffff", &material, emissive+0, emissive+1, emissive+2, emissive+3))
		return NULL;

	freyjaGetMaterialEmissive(material, emissive);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaGetMaterialShininess(PyObject *self, PyObject *args)
{
	/* vec_t */
	/* freyjaGetMaterialShininess */
	/* index_t */
	/* material */
	/* ; */


	index_t material;

	if (!PyArg_ParseTuple(args, "i", &material))
		return NULL;

	return PyFloat_FromDouble(freyjaGetMaterialShininess(material));
}


PyObject *py_freyjaGetMaterialTransparency(PyObject *self, PyObject *args)
{
	/* vec_t */
	/* freyjaGetMaterialTransparency */
	/* index_t */
	/* material */
	/* ; */


	index_t material;

	if (!PyArg_ParseTuple(args, "i", &material))
		return NULL;

	return PyFloat_FromDouble(freyjaGetMaterialTransparency(material));
}


PyObject *py_freyjaGetMaterialBlendSource(PyObject *self, PyObject *args)
{
	/* int32 */
	/* freyjaGetMaterialBlendSource */
	/* index_t */
	/* material */
	/* ; */


	index_t material;

	if (!PyArg_ParseTuple(args, "i", &material))
		return NULL;

	return PyInt_FromLong(freyjaGetMaterialBlendSource(material));
}


PyObject *py_freyjaGetMaterialBlendDestination(PyObject *self, PyObject *args)
{
	/* int32 */
	/* freyjaGetMaterialBlendDestination */
	/* index_t */
	/* material */
	/* ; */


	index_t material;

	if (!PyArg_ParseTuple(args, "i", &material))
		return NULL;

	return PyInt_FromLong(freyjaGetMaterialBlendDestination(material));
}


PyObject *py_freyjaMaterialName(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaMaterialName */
	/* index_t */
	/* material; */
	/* const */
	/* char* */
	/* name */
	/* ; */


	index_t material;
	char* name;

	if (!PyArg_ParseTuple(args, "ii", &material, &name))
		return NULL;

	freyjaMaterialName(material, name);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaMaterialClearFlag(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaMaterialClearFlag */
	/* index_t */
	/* material; */
	/* uint32 */
	/* flag */
	/* ; */


	index_t material;
	uint32 flag;

	if (!PyArg_ParseTuple(args, "ii", &material, &flag))
		return NULL;

	freyjaMaterialClearFlag(material, flag);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaMaterialSetFlag(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaMaterialSetFlag */
	/* index_t */
	/* material; */
	/* uint32 */
	/* flag */
	/* ; */


	index_t material;
	uint32 flag;

	if (!PyArg_ParseTuple(args, "ii", &material, &flag))
		return NULL;

	freyjaMaterialSetFlag(material, flag);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaMaterialFlags(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaMaterialFlags */
	/* index_t */
	/* material; */
	/* uint32 */
	/* flags */
	/* ; */


	index_t material;
	uint32 flags;

	if (!PyArg_ParseTuple(args, "ii", &material, &flags))
		return NULL;

	freyjaMaterialFlags(material, flags);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaMaterialTextureName(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaMaterialTextureName */
	/* index_t */
	/* material; */
	/* const */
	/* char* */
	/* name */
	/* ; */


	index_t material;
	char* name;

	if (!PyArg_ParseTuple(args, "ii", &material, &name))
		return NULL;

	freyjaMaterialTextureName(material, name);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaMaterialTexture(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaMaterialTexture */
	/* index_t */
	/* material; */
	/* index_t */
	/* textureIndex */
	/* ; */


	index_t material;
	index_t textureIndex;

	if (!PyArg_ParseTuple(args, "ii", &material, &textureIndex))
		return NULL;

	freyjaMaterialTexture(material, textureIndex);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaMaterialAmbient(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaMaterialAmbient */
	/* index_t */
	/* material; */
	/* const */
	/* vec4_t */
	/* ambient */
	/* ; */


	index_t material;
	vec4_t ambient;

	if (!PyArg_ParseTuple(args, "iffff", &material, ambient+0, ambient+1, ambient+2, ambient+3))
		return NULL;

	freyjaMaterialAmbient(material, ambient);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaMaterialDiffuse(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaMaterialDiffuse */
	/* index_t */
	/* material; */
	/* const */
	/* vec4_t */
	/* diffuse */
	/* ; */


	index_t material;
	vec4_t diffuse;

	if (!PyArg_ParseTuple(args, "iffff", &material, diffuse+0, diffuse+1, diffuse+2, diffuse+3))
		return NULL;

	freyjaMaterialDiffuse(material, diffuse);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaMaterialSpecular(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaMaterialSpecular */
	/* index_t */
	/* material; */
	/* const */
	/* vec4_t */
	/* specular */
	/* ; */


	index_t material;
	vec4_t specular;

	if (!PyArg_ParseTuple(args, "iffff", &material, specular+0, specular+1, specular+2, specular+3))
		return NULL;

	freyjaMaterialSpecular(material, specular);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaMaterialEmissive(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaMaterialEmissive */
	/* index_t */
	/* material; */
	/* const */
	/* vec4_t */
	/* emissive */
	/* ; */


	index_t material;
	vec4_t emissive;

	if (!PyArg_ParseTuple(args, "iffff", &material, emissive+0, emissive+1, emissive+2, emissive+3))
		return NULL;

	freyjaMaterialEmissive(material, emissive);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaMaterialShininess(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaMaterialShininess */
	/* index_t */
	/* material; */
	/* vec_t */
	/* exponent */
	/* ; */


	index_t material;
	vec_t exponent;

	if (!PyArg_ParseTuple(args, "if", &material, &exponent))
		return NULL;

	freyjaMaterialShininess(material, exponent);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaMaterialTransparency(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaMaterialTransparency */
	/* index_t */
	/* material; */
	/* vec_t */
	/* transparency */
	/* ; */


	index_t material;
	vec_t transparency;

	if (!PyArg_ParseTuple(args, "if", &material, &transparency))
		return NULL;

	freyjaMaterialTransparency(material, transparency);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaMaterialBlendSource(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaMaterialBlendSource */
	/* index_t */
	/* material; */
	/* uint32 */
	/* factor */
	/* ; */


	index_t material;
	uint32 factor;

	if (!PyArg_ParseTuple(args, "ii", &material, &factor))
		return NULL;

	freyjaMaterialBlendSource(material, factor);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaMaterialBlendDestination(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaMaterialBlendDestination */
	/* index_t */
	/* material; */
	/* uint32 */
	/* factor */
	/* ; */


	index_t material;
	uint32 factor;

	if (!PyArg_ParseTuple(args, "ii", &material, &factor))
		return NULL;

	freyjaMaterialBlendDestination(material, factor);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaPakBegin(PyObject *self, PyObject *args)
{
	/* index_t */
	/* freyjaPakBegin */
	/* const */
	/* char* */
	/* filename */
	/* ; */


	char* filename;

	if (!PyArg_ParseTuple(args, "i", &filename))
		return NULL;

	return PyInt_FromLong(freyjaPakBegin(filename));
}


PyObject *py_freyjaPakAddFullPathFile(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaPakAddFullPathFile */
	/* index_t */
	/* pakIndex; */
	/* const */
	/* char* */
	/* vfsFilename; */
	/* int32 */
	/* offset; */
	/* int32 */
	/* size */
	/* ; */


	index_t pakIndex;
	char* vfsFilename;
	int32 offset;
	int32 size;

	if (!PyArg_ParseTuple(args, "iiii", &pakIndex, &vfsFilename, &offset, &size))
		return NULL;

	freyjaPakAddFullPathFile(pakIndex, vfsFilename, offset, size);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaMeshDelete(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaMeshDelete */
	/* index_t */
	/* mesh */
	/* ; */


	index_t mesh;

	if (!PyArg_ParseTuple(args, "i", &mesh))
		return NULL;

	freyjaMeshDelete(mesh);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaMeshPolygonExtrudeQuad1f(PyObject *self, PyObject *args)
{
	/* void */
	/* freyjaMeshPolygonExtrudeQuad1f */
	/* index_t */
	/* mesh; */
	/* index_t */
	/* quad; */
	/* vec3_t */
	/* n */
	/* ; */


	index_t mesh;
	index_t quad;
	vec3_t n;

	if (!PyArg_ParseTuple(args, "iifff", &mesh, &quad, n+0, n+1, n+2))
		return NULL;

	freyjaMeshPolygonExtrudeQuad1f(mesh, quad, n);
	return PyInt_FromLong(0);
}


PyObject *py_freyjaMeshVertexTrackNew(PyObject *self, PyObject *args)
{
	/* index_t */
	/* freyjaMeshVertexTrackNew */
	/* index_t */
	/* mesh; */
	/* vec_t */
	/* duration; */
	/* vec_t */
	/* rate */
	/* ; */


	index_t mesh;
	vec_t duration;
	vec_t rate;

	if (!PyArg_ParseTuple(args, "iff", &mesh, &duration, &rate))
		return NULL;

	return PyInt_FromLong(freyjaMeshVertexTrackNew(mesh, duration, rate));
}


PyObject *py_freyjaGetMeshCount(PyObject *self, PyObject *args)
{
	return PyInt_FromLong(freyjaGetMeshCount());
}


PyObject *py_freyjaMeshCreateSheet(PyObject *self, PyObject *args)
{
	/* index_t */
	/* freyjaMeshCreateSheet */
	/* vec3_t */
	/* origin; */
	/* vec_t */
	/* size; */
	/* uint32 */
	/* rows; */
	/* uint32 */
	/* columns */
	/* ; */


	vec3_t origin;
	vec_t size;
	uint32 rows;
	uint32 columns;

	if (!PyArg_ParseTuple(args, "ffffii", origin+0, origin+1, origin+2, &size, &rows, &columns))
		return NULL;

	return PyInt_FromLong(freyjaMeshCreateSheet(origin, size, rows, columns));
}


PyObject *py_freyjaMeshCreateCube(PyObject *self, PyObject *args)
{
	/* index_t */
	/* freyjaMeshCreateCube */
	/* vec3_t */
	/* origin; */
	/* vec_t */
	/* size */
	/* ; */


	vec3_t origin;
	vec_t size;

	if (!PyArg_ParseTuple(args, "ffff", origin+0, origin+1, origin+2, &size))
		return NULL;

	return PyInt_FromLong(freyjaMeshCreateCube(origin, size));
}


PyObject *py_freyjaMeshCreateCircle(PyObject *self, PyObject *args)
{
	/* index_t */
	/* freyjaMeshCreateCircle */
	/* vec3_t */
	/* origin; */
	/* vec_t */
	/* radius; */
	/* uint32 */
	/* count */
	/* ; */


	vec3_t origin;
	vec_t radius;
	uint32 count;

	if (!PyArg_ParseTuple(args, "ffffi", origin+0, origin+1, origin+2, &radius, &count))
		return NULL;

	return PyInt_FromLong(freyjaMeshCreateCircle(origin, radius, count));
}


PyObject *py_freyjaMeshCreateCone(PyObject *self, PyObject *args)
{
	/* index_t */
	/* freyjaMeshCreateCone */
	/* vec3_t */
	/* origin; */
	/* vec_t */
	/* height; */
	/* vec_t */
	/* radius; */
	/* uint32 */
	/* wedges */
	/* ; */


	vec3_t origin;
	vec_t height;
	vec_t radius;
	uint32 wedges;

	if (!PyArg_ParseTuple(args, "fffffi", origin+0, origin+1, origin+2, &height, &radius, &wedges))
		return NULL;

	return PyInt_FromLong(freyjaMeshCreateCone(origin, height, radius, wedges));
}


PyObject *py_freyjaMeshCreateCylinder(PyObject *self, PyObject *args)
{
	/* index_t */
	/* freyjaMeshCreateCylinder */
	/* vec3_t */
	/* origin; */
	/* vec_t */
	/* height; */
	/* vec_t */
	/* radius; */
	/* uint32 */
	/* sides; */
	/* uint32 */
	/* rings */
	/* ; */


	vec3_t origin;
	vec_t height;
	vec_t radius;
	uint32 sides;
	uint32 rings;

	if (!PyArg_ParseTuple(args, "fffffii", origin+0, origin+1, origin+2, &height, &radius, &sides, &rings))
		return NULL;

	return PyInt_FromLong(freyjaMeshCreateCylinder(origin, height, radius, sides, rings));
}


PyMethodDef Plugin_methods[] = {
	{ "freyjaGetSkeletonCount", py_freyjaGetSkeletonCount, METH_VARARGS },
	{ "freyjaKeyFrameGroupCreate", py_freyjaKeyFrameGroupCreate, METH_VARARGS },
	{ "freyjaGetKeyFrameCount", py_freyjaGetKeyFrameCount, METH_VARARGS },
	{ "freyjaBoneDelete", py_freyjaBoneDelete, METH_VARARGS },
	{ "freyjaBoneAddChild", py_freyjaBoneAddChild, METH_VARARGS },
	{ "freyjaBoneTranslate3fv", py_freyjaBoneTranslate3fv, METH_VARARGS },
	{ "freyjaBoneRotateEuler3fv", py_freyjaBoneRotateEuler3fv, METH_VARARGS },
	{ "freyjaBoneRotateQuat4f", py_freyjaBoneRotateQuat4f, METH_VARARGS },
	{ "freyjaBoneRotateQuat4fv", py_freyjaBoneRotateQuat4fv, METH_VARARGS },
	{ "freyjaGetBoneRotationEuler3fv", py_freyjaGetBoneRotationEuler3fv, METH_VARARGS },
	{ "freyjaGetBoneParent", py_freyjaGetBoneParent, METH_VARARGS },
	{ "freyjaBoneUpdateBindPose", py_freyjaBoneUpdateBindPose, METH_VARARGS },
	{ "freyjaBoneGetBindTransform", py_freyjaBoneGetBindTransform, METH_VARARGS },
	{ "freyjaBoneGetBindTransformInverse", py_freyjaBoneGetBindTransformInverse, METH_VARARGS },
	{ "freyjaBoneBindTransformVertex", py_freyjaBoneBindTransformVertex, METH_VARARGS },
	{ "freyjaBoneTrackNew", py_freyjaBoneTrackNew, METH_VARARGS },
	{ "freyjaBoneTrackDuration", py_freyjaBoneTrackDuration, METH_VARARGS },
	{ "freyjaBoneTrackRate", py_freyjaBoneTrackRate, METH_VARARGS },
	{ "freyjaBoneKeyFrameNew", py_freyjaBoneKeyFrameNew, METH_VARARGS },
	{ "freyjaBonePosKeyFrame3f", py_freyjaBonePosKeyFrame3f, METH_VARARGS },
	{ "freyjaBoneRotKeyFrameEuler3f", py_freyjaBoneRotKeyFrameEuler3f, METH_VARARGS },
	{ "freyjaBoneRotKeyFrameQuat4f", py_freyjaBoneRotKeyFrameQuat4f, METH_VARARGS },
	{ "freyjaGetLightCount", py_freyjaGetLightCount, METH_VARARGS },
	{ "freyjaLightDelete", py_freyjaLightDelete, METH_VARARGS },
	{ "freyjaLightPosition4v", py_freyjaLightPosition4v, METH_VARARGS },
	{ "freyjaLightAmbient", py_freyjaLightAmbient, METH_VARARGS },
	{ "freyjaLightDiffuse", py_freyjaLightDiffuse, METH_VARARGS },
	{ "freyjaLightSpecular", py_freyjaLightSpecular, METH_VARARGS },
	{ "freyjaGetLightPosition4v", py_freyjaGetLightPosition4v, METH_VARARGS },
	{ "freyjaGetLightAmbient", py_freyjaGetLightAmbient, METH_VARARGS },
	{ "freyjaGetLightDiffuse", py_freyjaGetLightDiffuse, METH_VARARGS },
	{ "freyjaGetLightSpecular", py_freyjaGetLightSpecular, METH_VARARGS },
	{ "freyjaGetMaterialIndex", py_freyjaGetMaterialIndex, METH_VARARGS },
	{ "freyjaGetMaterialTexture", py_freyjaGetMaterialTexture, METH_VARARGS },
	{ "freyjaGetMaterialTextureName", py_freyjaGetMaterialTextureName, METH_VARARGS },
	{ "freyjaGetMaterialAmbient", py_freyjaGetMaterialAmbient, METH_VARARGS },
	{ "freyjaGetMaterialDiffuse", py_freyjaGetMaterialDiffuse, METH_VARARGS },
	{ "freyjaGetMaterialSpecular", py_freyjaGetMaterialSpecular, METH_VARARGS },
	{ "freyjaGetMaterialEmissive", py_freyjaGetMaterialEmissive, METH_VARARGS },
	{ "freyjaGetMaterialShininess", py_freyjaGetMaterialShininess, METH_VARARGS },
	{ "freyjaGetMaterialTransparency", py_freyjaGetMaterialTransparency, METH_VARARGS },
	{ "freyjaGetMaterialBlendSource", py_freyjaGetMaterialBlendSource, METH_VARARGS },
	{ "freyjaGetMaterialBlendDestination", py_freyjaGetMaterialBlendDestination, METH_VARARGS },
	{ "freyjaMaterialName", py_freyjaMaterialName, METH_VARARGS },
	{ "freyjaMaterialClearFlag", py_freyjaMaterialClearFlag, METH_VARARGS },
	{ "freyjaMaterialSetFlag", py_freyjaMaterialSetFlag, METH_VARARGS },
	{ "freyjaMaterialFlags", py_freyjaMaterialFlags, METH_VARARGS },
	{ "freyjaMaterialTextureName", py_freyjaMaterialTextureName, METH_VARARGS },
	{ "freyjaMaterialTexture", py_freyjaMaterialTexture, METH_VARARGS },
	{ "freyjaMaterialAmbient", py_freyjaMaterialAmbient, METH_VARARGS },
	{ "freyjaMaterialDiffuse", py_freyjaMaterialDiffuse, METH_VARARGS },
	{ "freyjaMaterialSpecular", py_freyjaMaterialSpecular, METH_VARARGS },
	{ "freyjaMaterialEmissive", py_freyjaMaterialEmissive, METH_VARARGS },
	{ "freyjaMaterialShininess", py_freyjaMaterialShininess, METH_VARARGS },
	{ "freyjaMaterialTransparency", py_freyjaMaterialTransparency, METH_VARARGS },
	{ "freyjaMaterialBlendSource", py_freyjaMaterialBlendSource, METH_VARARGS },
	{ "freyjaMaterialBlendDestination", py_freyjaMaterialBlendDestination, METH_VARARGS },
	{ "freyjaPakBegin", py_freyjaPakBegin, METH_VARARGS },
	{ "freyjaPakAddFullPathFile", py_freyjaPakAddFullPathFile, METH_VARARGS },
	{ "freyjaMeshDelete", py_freyjaMeshDelete, METH_VARARGS },
	{ "freyjaMeshPolygonExtrudeQuad1f", py_freyjaMeshPolygonExtrudeQuad1f, METH_VARARGS },
	{ "freyjaMeshVertexTrackNew", py_freyjaMeshVertexTrackNew, METH_VARARGS },
	{ "freyjaGetMeshCount", py_freyjaGetMeshCount, METH_VARARGS },
	{ "freyjaMeshCreateSheet", py_freyjaMeshCreateSheet, METH_VARARGS },
	{ "freyjaMeshCreateCube", py_freyjaMeshCreateCube, METH_VARARGS },
	{ "freyjaMeshCreateCircle", py_freyjaMeshCreateCircle, METH_VARARGS },
	{ "freyjaMeshCreateCone", py_freyjaMeshCreateCone, METH_VARARGS },
	{ "freyjaMeshCreateCylinder", py_freyjaMeshCreateCylinder, METH_VARARGS },
	{ NULL }
};


PyObject *Freyja_Plugin_Gobals()
{
	PyObject *module, *dict, *tmp;

	module = Py_InitModule("FreyjaModeler", Plugin_methods);
	dict = PyModule_GetDict(module);
	
	/* Append gobal constants you want python to see */
	tmp = PyInt_FromLong(FREYJA_MODEL);
	PyDict_SetItemString(dict, "FREYJA_MODEL", tmp);
	Py_DECREF(tmp);
	
	return module;
}


void freyjaPython1s(const char *plugin, const char *symbol, const char *s)
{
	PyObject *module, *dict, *tmp;

	/* Start up python */
	Py_Initialize();
	module = Freyja_Plugin_Gobals();
	dict = PyModule_GetDict(module);

	/* Append gobal constants, pass <s> as <symbol> in python */
	tmp = PyString_FromFormat(s);
	PyDict_SetItemString(dict, symbol, tmp);
	Py_DECREF(tmp);

	freyjaPrintMessage("[Module '%s' opened.]", plugin);
	FILE *f = fopen(plugin, "r");

	if (!f)
	{
		freyjaPrintError("[Module '%s' failed to load.]", plugin);
		perror(plugin);
	}
	else
	{
		PyRun_SimpleFile(f, plugin);
		Py_Finalize();
	}
}


#endif // USING_PYTHON
