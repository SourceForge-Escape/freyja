################################################################
# libhel Core Makefile
#
# -- History ---------------------------------------------------
#
# 2007.05.11:
# Mongoose - Created from old unified Makefile. 
################################################################

################################################################
# Compiler and Cross Enviroments
################################################################

-include Makefile.Core

-include ../win32.env

CC=gcc
JAVAC=javac
DEPS=./deps.sh


################################################################

BUILD_SELECT=debug
DEPEND_FILE=depend.win32

################################################################

BUILD_DEBUG_DIR=$(BUILD_ROOT_DIR)/win32/debug
BUILD_RELEASE_DIR=$(BUILD_ROOT_DIR)/win32/release
BUILD_TEST_DIR=$(BUILD_ROOT_DIR)/win32/test

COMMON_CFLAGS += -DWIN32 -DHAVE_FREYJA_IMAGE -DFOUND_OPENGL -DHAVE_OPENGL -DHAVE_GTKGL -DHAVE_HEL \
		-DPLANE_NOTIFY_WITH_AXIS -DUSING_OPENGL_EXT \
		-DHAVE_FREETYPE2  

################################################################

LD_FLAGS=-lstdc++ -lm $(WIN32_LIB_DIR) -lpthreadGC2  \
	-L$(LOCAL_WIN32_LIBS) $(WIN32_CROSS_LIBS) $(WIN32_LIBFREYJA) $(WIN32_LIBHEL) $(WIN32_LIBMGTK) -lfreetype

RELEASE_CFLAGS=$(COMMON_CFLAGS) \
	-Wall \
	-ffast-math -funroll-loops \
	-fomit-frame-pointer -fexpensive-optimizations -O2

DEBUG_CFLAGS=$(COMMON_CFLAGS) -Wall -g -DDEBUG -DEXPERIMENTAL

BASE_DEFS=-I$(SRC_DIR)

DO_CC=$(CC) $(CFLAGS) -o $@ -c $<

################################################################

TARGETS=$(MODULE).exe

auto: $(BUILD_SELECT)


################################################################

debug:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) -f Makefile.Win32 targets \
	BUILD_DIR=$(BUILD_DEBUG_DIR) \
	CC=$(WIN32_CC) \
	CPP=$(WIN32_CPP)  \
	LD=$(WIN32_LD)  \
	MODULE="$(NAME)" \
	CFLAGS="$(DEBUG_CFLAGS) $(WIN32_INC_DIR) " \
	LD_FLAGS="$(LD_FLAGS) -L$(WIN32_LOCAL_LIB_DIR) $(LOCAL_WIN32_LIBS) $(WIN32_CROSS_LIBS) $(WIN32_LIBFREYJA) $(WIN32_LIBHEL) $(WIN32_LIBMGTK) -lfreetype"

release:
	@-mkdir -p $(BUILD_RELEASE_DIR)
	$(MAKE) -f Makefile.Win32 targets BUILDDIR=$(BUILD_RELEASE_DIR) \
	CC=$(WIN32_CC) \
	CPP=$(WIN32_CPP)  \
	LD=$(WIN32_LD)  \
	MODULE="$(NAME)$(MAJOR_VERSION)" \
	EXT=".dll" \
	CFLAGS="$(RELEASE_CFLAGS) $(WIN32_INC_DIR) -DHELEXPORTSCLASS" \
	LD_FLAGS="$(LD_FLAGS)" 


targets: $(TARGETS)

################################################################

$(DEPEND_FILE):
	@-echo -n Making deps...
	@-echo "# Autogenerated dependency file" > $(DEPEND_FILE)
	@-find $(SRC_DIR) -name "*.cpp" -exec ./deps.sh -I. $(COMMON_CFLAGS) $(COMMON_INCLUDES) {} \; >> $(DEPEND_FILE)
	@-echo "       [done]"



$(MODULE).exe : $(OBJS)
	$(CC)  -o $(WIN32_LOCAL_LIB_DIR)/$(MODULE).exe \
    -Wl,--export-all-symbols \
    -Wl,--enable-auto-import \
    -Wl,--whole-archive $(OBJS) \
    -Wl,--no-whole-archive $(LD_FLAGS)

################################################################

-include $(DEPEND_FILE)

################################################################

clean:
	@-rm -f $(DEPEND_FILE)

	@-echo -n "Cleaning backup files                       "
	@-rm -f `find . -name "*~" -print`
	@-echo "[done]"

	@-echo -n "Cleaning DEBUG builds                       "
	@-rm -f $(BUILD_DEBUG_DIR)/*.o
	@-rm -f $(BUILD_DEBUG_DIR)/*.a
	@-rm -f $(BUILD_DEBUG_DIR)/*.dll
	@-echo "[done]"

	@-echo -n "Cleaning RELEASE builds                     "
	@-rm -f $(BUILD_RELEASE_DIR)/*.o
	@-rm -f $(BUILD_RELEASE_DIR)/*.a
	@-rm -f $(BUILD_RELEASE_DIR)/*.dll
	@-echo "[done]"


################################################################

install-debug:
	@-echo -n "Installing debug build                   "
	@-cp $(BUILD_DEBUG_DIR)/*.a $(BUILD_DEBUG_DIR)/*.dll $(INSTALL_LIB)
	@-echo "[done]"


################################################################

test-strip:
	strip --strip-all $(BUILD_TEST_DIR)/libhel.exe

cycle: debug install-debug test

test:
	mkdir -p $(BUILD_TEST_DIR)
	CC="i586-mingw32msvc-g++ -mms-bitfields" \
	CPP="i586-mingw32msvc-cpp " \
	LD="i586-mingw32msvc-ld " \
	EXT="dll" \
	CFLAGS="$(DEBUG_CFLAGS) -I/usr/local/include/" \
	i586-mingw32msvc-g++ -mms-bitfields \
		-Wall -g -pipe -O0 -I/usr/local/include/ -DUNIT_TEST_LIBHEL  \
		hel/libhel.cpp \
		-o $(BUILD_TEST_DIR)/libhel.exe \
		-lstdc++ -L/usr/local/lib/ -lhel0



