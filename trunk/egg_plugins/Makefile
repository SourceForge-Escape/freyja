################################################################
# Mongoose <stu7440@westga.edu>
################################################################
# + Cleaner clean
# + Add new include tree
# + Add new flags
# + Install/Uninstall
# + Lots of misc new features
################################################################

BUILD_SELECT=plugins

# -DMODEL_PLUGINS
BASE_DEFS=-DMODEL_PLUGINS

# -DDEBUG -DEXPERIMENTAL -DFIXME -DOBSOLETE
DEBUG_DEFS=-DDEBUG -DEXPERIMENTAL

################################################################

NAME=freyja_model
MAJOR_VERSION=0
MINOR_VERSION=8
MICRO_VERSION=99
BUILD_ID=20040406
VERSION=$(MAJOR_VERSION).$(MINOR_VERSION).$(MICRO_VERSION)
EXT=.so
TREE_DIR=libfreyja_model
TARBALL_NAME=lib$(NAME)-$(VERSION).$(BUILD_ID)

################################################################

CC=gcc

################################################################


BUILD_DEBUG_DIR=bin/debug
BUILD_RELEASE_DIR=bin/release
BUILD_PROF_DIR=bin/prof
BUILD_TEST_DIR=bin/test
BUILD_INSTALL_DIR=bin/$(BUILD_SELECT)

INSTALL_BIN=/usr/local/bin
INSTALL_LIB=/usr/local/lib
INSTALL_INCLUDE=/usr/local/include

################################################################

#CONFIGURE_DEF=`grep -e "-D" ./config.cache`
#CONFIGURE_LNK=`grep -e "-l" ./config.cache`
CONFIGURE_DEF=
CONFIGURE_LNK=

################################################################

BASE_CFLAGS=-Wall -Isrc/plug-ins -Isrc/ds \
	-Isrc/utils $(CONFIGURE_DEF) \
	-DVERSION=\"\\\"$(VERSION)-$(BUILD_ID)\\\"\" \
	$(BASE_DEFS)

LDFLAGS=$(CONFIGURE_LNK) -lm -ldl
RELEASE_CFLAGS=$(BASE_CFLAGS) -ffast-math -funroll-loops \
	-fomit-frame-pointer -fexpensive-optimizations -O2
DEBUG_CFLAGS=$(BASE_CFLAGS) -g $(DEBUG_DEFS)

SHLIBEXT=$(EXT).$(VERSION)
SHLIBLDFLAGS=$(LDFLAGS) -fPIC -shared

MODULE_CFLAGS=$(BASE_CFLAGS) -g -DFREYJA_MODEL_PLUGINS
MODULE_LD_FLAGS=-lfreyja_model -lhel0 -shared -fPIC -ldl -rdynamic

################################################################

DO_CC=$(CC) $(CFLAGS) -o $@ -c $<
DO_SHLIB_CC=$(CC) $(CFLAGS) $(SHLIBCFLAGS) -o $@ -c $<

TARGETS=$(BUILD_DIR)/lib$(NAME)$(SHLIBEXT)
PLUGINS=$(BUILD_DIR)/libfreyja_loader-$(MOD_NAME).so
TESTS=$(BUILD_DIR)/$(NAME).test

################################################################

auto: $(BUILD_SELECT)

all: debug release prof

debug:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) targets BUILD_DIR=$(BUILD_DEBUG_DIR) \
	CFLAGS="$(DEBUG_CFLAGS)" \
	LD_FLAGS="$(LD_FLAGS)"

prof:
	@-mkdir -p $(BUILD_PROF_DIR)
	$(MAKE) targets BUILD_DIR=$(BUILD_PROF_DIR) \
	CFLAGS="$(DEBUG_CFLAGS) -pg" \
	LD_FLAGS="$(LD_FLAGS) -pg"

release:
	@-mkdir -p $(BUILD_RELEASE_DIR)
	$(MAKE) targets BUILD_DIR=$(BUILD_RELEASE_DIR) \
	CFLAGS="$(RELEASE_CFLAGS)" \
	LD_FLAGS="$(LD_FLAGS)"

depend:
	@-echo -n Making deps...
	@-echo "# Autogenerated dependency file" > depend
	@-find ./src -name "*.cpp" -exec ./deps.sh $(BASE_DEFS) -Isrc/lib -Isrc/plug-ins -Isrc/ds -Isrc/utils {} \; >> depend
	@-echo "       [done]"

################################################################

plug-ins: $(PLUGINS)

ase.so:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) plug-ins BUILD_DIR=$(BUILD_DEBUG_DIR) \
	MOD_NAME=ase \
	MOD_OBJS="$(BUILD_DEBUG_DIR)/Ase.o" \
	CFLAGS="$(MODULE_CFLAGS)" \
	LD_FLAGS="$(MODULE_LD_FLAGS)"

psk.so:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) plug-ins BUILD_DIR=$(BUILD_DEBUG_DIR) \
	MOD_NAME=psk \
	MOD_OBJS="$(BUILD_DEBUG_DIR)/PSKModel.o" \
	CFLAGS="$(MODULE_CFLAGS)" \
	LD_FLAGS="$(MODULE_LD_FLAGS)"

trmesh.so:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) plug-ins BUILD_DIR=$(BUILD_DEBUG_DIR) \
	MOD_NAME=trmesh \
	MOD_OBJS=$(BUILD_DEBUG_DIR)/freyja_trmesh.o \
	CFLAGS="$(MODULE_CFLAGS)" \
	LD_FLAGS="$(MODULE_LD_FLAGS)"

3ds.so:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) plug-ins BUILD_DIR=$(BUILD_DEBUG_DIR) \
	MOD_NAME=3ds \
	MOD_OBJS=$(BUILD_DEBUG_DIR)/freyja_3ds.o \
	CFLAGS="$(MODULE_CFLAGS)" \
	LD_FLAGS="$(MODULE_LD_FLAGS) -l3ds"

tombraider.so:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) plug-ins BUILD_DIR=$(BUILD_DEBUG_DIR) \
	MOD_NAME=tombraider \
	MOD_OBJS="$(BUILD_DEBUG_DIR)/TombRaider.o \
		$(BUILD_DEBUG_DIR)/freyja_tombraider.o" \
	CFLAGS="$(MODULE_CFLAGS) -DZLIB_SUPPORT" \
	LD_FLAGS="$(MODULE_LD_FLAGS) -lz"

halflife.so:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) plug-ins BUILD_DIR=$(BUILD_DEBUG_DIR) \
	MOD_NAME=halflife \
	MOD_OBJS="$(BUILD_DEBUG_DIR)/HalfLife.o \
		$(BUILD_DEBUG_DIR)/freyja_halflife.o" \
	CFLAGS="$(MODULE_CFLAGS)" \
	LD_FLAGS="$(MODULE_LD_FLAGS)"

md3.so:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) plug-ins BUILD_DIR=$(BUILD_DEBUG_DIR) \
	MOD_NAME=md3 \
	MOD_OBJS="$(BUILD_DEBUG_DIR)/Md3.o $(BUILD_DEBUG_DIR)/freyja_md3.o" \
	CFLAGS="$(MODULE_CFLAGS)" \
	LD_FLAGS="$(MODULE_LD_FLAGS)"

md2.so:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) plug-ins BUILD_DIR=$(BUILD_DEBUG_DIR) \
	MOD_NAME=md2 \
	MOD_OBJS="$(BUILD_DEBUG_DIR)/Md2.o $(BUILD_DEBUG_DIR)/freyja_md2.o" \
	CFLAGS="$(MODULE_CFLAGS)" \
	LD_FLAGS="$(MODULE_LD_FLAGS)"

mdl.so:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) plug-ins BUILD_DIR=$(BUILD_DEBUG_DIR) \
	MOD_NAME=mdl \
	MOD_OBJS="$(BUILD_DEBUG_DIR)/Mdl.o $(BUILD_DEBUG_DIR)/freyja_mdl.o" \
	CFLAGS="$(MODULE_CFLAGS)" \
	LD_FLAGS="$(MODULE_LD_FLAGS)"

eggv7.so:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) plug-ins BUILD_DIR=$(BUILD_DEBUG_DIR) \
	MOD_NAME=eggv7 \
	MOD_OBJS="$(BUILD_DEBUG_DIR)/freyja_eggv7.o" \
	CFLAGS="$(MODULE_CFLAGS)" \
	LD_FLAGS="$(MODULE_LD_FLAGS)"

unreal.so:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) plug-ins BUILD_DIR=$(BUILD_DEBUG_DIR) \
	MOD_NAME=ut \
	MOD_OBJS="$(BUILD_DEBUG_DIR)/Unreal.o $(BUILD_DEBUG_DIR)/freyja_ut.o" \
	CFLAGS="$(MODULE_CFLAGS)" \
	LD_FLAGS="$(MODULE_LD_FLAGS)"

lwo.so:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) plug-ins BUILD_DIR=$(BUILD_DEBUG_DIR) \
	MOD_NAME=lwo \
	MOD_OBJS="$(BUILD_DEBUG_DIR)/freyja_lwo.o $(BUILD_DEBUG_DIR)/Lwo.o" \
	CFLAGS="$(MODULE_CFLAGS)" \
	LD_FLAGS="$(MODULE_LD_FLAGS)"

quakemap.so:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) plug-ins BUILD_DIR=$(BUILD_DEBUG_DIR) \
	MOD_NAME=quakemap \
	MOD_OBJS="$(BUILD_DEBUG_DIR)/freyja_quakemap.o $(BUILD_DEBUG_DIR)/QuakeMap.o" \
	CFLAGS="$(MODULE_CFLAGS)" \
	LD_FLAGS="$(MODULE_LD_FLAGS)"

nod.so:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) plug-ins BUILD_DIR=$(BUILD_DEBUG_DIR) \
	MOD_NAME=nod \
	MOD_OBJS="$(BUILD_DEBUG_DIR)/freyja_nod.o $(BUILD_DEBUG_DIR)/Nod.o" \
	CFLAGS="$(MODULE_CFLAGS)" \
	LD_FLAGS="$(MODULE_LD_FLAGS)"

user1.so:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) plug-ins BUILD_DIR=$(BUILD_DEBUG_DIR) \
	MOD_NAME=user1 \
	MOD_OBJS="$(BUILD_DEBUG_DIR)/freyja_user1.o" \
	CFLAGS="$(MODULE_CFLAGS)" \
	LD_FLAGS="$(MODULE_LD_FLAGS)"

plugins: mdl.so md2.so md3.so \
	ase.so eggv7.so lwo.so \
	trmesh.so tombraider.so  \
	nod.so psk.so

################################################################

$(BUILD_DIR)/libfreyja_loader-$(MOD_NAME).so : $(MOD_OBJS)
	$(CC) $(CFLAGS) $(LD_FLAGS) -o $@ $(MOD_OBJS)

################################################################

targets: $(TARGETS)

PROG_OBJS = \
	$(BUILD_DIR)/mtk3d.o \
	$(BUILD_DIR)/mendian.o \
	$(BUILD_DIR)/Egg.o \
	$(BUILD_DIR)/EggPlugin.o

$(BUILD_DIR)/lib$(NAME)$(SHLIBEXT) : $(PROG_OBJS)
	$(CC) $(CFLAGS) $(SHLIBLDFLAGS) -o $@ $(PROG_OBJS)

#################################################################

-include depend

#################################################################

clean: clean-emacs clean-build clean-test clean-obj

clean-test:
	@-echo -n "Cleaning test builds                         "
	@-rm -f $(BUILD_TEST_DIR)/*.test
	@-echo "[DONE]"

clean-obj:
	@-echo -n "Cleaning objects                             "
	@-rm -f $(BUILD_PROF_DIR)/*.o
	@-rm -f $(BUILD_DEBUG_DIR)/*.o
	@-rm -f $(BUILD_RELEASE_DIR)/*.o
	@-echo "[DONE]"

clean-emacs:
	@-echo -n "Cleaning emacs files                         "
	@-rm -f `find . -name "*~" -print`
	@-echo "[DONE]"

clean-build:
	@-echo -n "Cleaning builds                              "
	@-rm -f $(BUILD_PROF_DIR)/lib$(NAME)$(SHLIBEXT)
	@-rm -f $(BUILD_DEBUG_DIR)/lib$(NAME)$(SHLIBEXT)
	@-rm -f $(BUILD_RELEASE_DIR)/lib$(NAME)$(SHLIBEXT)
	@-rm -f $(BUILD_PROF_DIR)/*.so
	@-rm -f $(BUILD_DEBUG_DIR)/*.so
	@-rm -f $(BUILD_RELEASE_DIR)/*.so
	@-rm -f $(BUILD_DEBUG_DIR)/*.test
	@-echo "[DONE]"


################################################################

install:
	@-echo "Installing plugins to  ~/.freyja/plugins/"
	@-mkdir -p $(HOME)/.freyja/plugins/
	@cp -f bin/debug/libfreyja_loader* ~/.freyja/plugins/


################################################################

uninstall:
	@-echo -n "Uninstalling                                 " 
	@-rm -f $(INSTALL_LIB)/lib$(NAME)$(EXT)
	@-rm -f $(INSTALL_LIB)/lib$(NAME)$(SHLIBEXT)
	@-rm -f $(INSTALL_BIN)/$(NAME)
	@-rm -rf $(INSTALL_LIB)/$(NAME)
	@-rm -rf $(INSTALL_INCLUDE)/$(NAME)
	@-echo "[DONE]"


################################################################

tarball:
	@-echo "Making tarball                                  " 
	@-cd .. && tar zcvf $(TARBALL_NAME).tar.gz $(TREE_DIR) \
		--exclude bin --exclude CVS --exclude *~ --exclude contrib \
		--totals
	@-echo "[DONE]"

backup:
	@-$(MAKE) clean
	@-cd .. && tar Icvf $(NAME)-$(VERSION)-$(BUILD_ID).tar.bz2 \
	$(TREE_DIR) \
	--exclude bin --exclude *~ --totals \
	&& cp $(NAME)-$(VERSION)-$(BUILD_ID).tar.bz2 ~/Backup



################################################################
# Test module builds
#
# These test plugins and componets as console programs
################################################################

tests: $(TESTS)

################################################################

mdl:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) tests NAME=mdl BUILD_DIR=$(BUILD_DEBUG_DIR) \
	OBJS="$(BUILD_DEBUG_DIR)/Mdl.o $(BUILD_DEBUG_DIR)/endian.o" \
	CFLAGS="$(BASE_CFLAGS) -g -DTEST_MDL" \
	LD_FLAGS=""

md2:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) tests NAME=md2 BUILD_DIR=$(BUILD_DEBUG_DIR) \
	OBJS="$(BUILD_DEBUG_DIR)/Md2.o" \
	CFLAGS="$(BASE_CFLAGS) -g -DTEST_MD2" \
	LD_FLAGS=""

md3:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) tests NAME=md3 BUILD_DIR=$(BUILD_DEBUG_DIR) \
	OBJS="$(BUILD_DEBUG_DIR)/Md3.o $(BUILD_DEBUG_DIR)/endian.o" \
	CFLAGS="$(BASE_CFLAGS) -g -DTEST_MD3" \
	LD_FLAGS=""

unreal:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) tests NAME=unreal BUILD_DIR=$(BUILD_DEBUG_DIR) \
	OBJS="$(BUILD_DEBUG_DIR)/Unreal.o" \
	CFLAGS="$(BASE_CFLAGS) -g -DTEST_UNREAL" \
	LD_FLAGS=""

ase:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) tests NAME=ase BUILD_DIR=$(BUILD_DEBUG_DIR) \
	OBJS="$(BUILD_DEBUG_DIR)/Ase.o" \
	CFLAGS="$(BASE_CFLAGS) -DTEST_ASE" \
	LD_FLAGS=""

hl:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) tests NAME=hl BUILD_DIR=$(BUILD_DEBUG_DIR) \
	OBJS="$(BUILD_DEBUG_DIR)/HalfLife.o" \
	CFLAGS="$(BASE_CFLAGS) -DTEST_HALFLIFE" \
	LD_FLAGS=""

nod:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) tests NAME=nod BUILD_DIR=$(BUILD_DEBUG_DIR) \
	OBJS="$(BUILD_DEBUG_DIR)/Nod.o" \
	CFLAGS="$(BASE_CFLAGS) -g -DTEST_NOD" \
	LD_FLAGS="-lm" 

tombraider:
	@-mkdir -p $(BUILD_DEBUG_DIR)
	$(MAKE) tests NAME=tombraider BUILD_DIR=$(BUILD_DEBUG_DIR) \
	OBJS="$(BUILD_DEBUG_DIR)/TombRaider.o" \
	CFLAGS="$(BASE_CFLAGS) -g -D__TOMBRAIDER_TEST__ -D__TEST_TR5_DUMP_TGA -DZLIB_SUPPORT" \
	LD_FLAGS="-lz"


$(BUILD_DIR)/$(NAME).test : $(OBJS)
	$(CC) $(CFLAGS) $(LD_FLAGS) -o $@ $(OBJS)


################################################################
# Unit tests
################################################################

Vector.test:
	@-mkdir -p $(BUILD_TEST_DIR)
	$(CC) $(BASE_CFLAGS) -g -O0 -lstdc++ -Isrc/ds \
	src/ds/vector_test.cpp -o $(BUILD_TEST_DIR)/vector.test

Egg.test:
	@-mkdir -p $(BUILD_TEST_DIR)
	$(MAKE) tests NAME=egg BUILD_DIR=$(BUILD_TEST_DIR) \
	OBJS="$(BUILD_TEST_DIR)/Egg.o $(BUILD_TEST_DIR)/mtk3d.o" \
	CFLAGS="$(BASE_CFLAGS) -g -O0 -DUNIT_TEST_EGG" \
	LD_FLAGS="-lm -lstdc++"

Map.test:
	@-mkdir -p $(BUILD_TEST_DIR)
	gcc -Wall -g -D__TEST__ -lstdc++ \
	src/ds/Map.cpp -o $(BUILD_TEST_DIR)/Map.test

Tree.test:
	@-mkdir -p $(BUILD_TEST_DIR)
	gcc -Wall -g -D__TEST__ -lstdc++ \
	src/ds/Tree.cpp -o $(BUILD_TEST_DIR)/Tree.test
