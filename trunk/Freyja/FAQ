
 Freyja, Frequeny Asked Questions (FAQ)  ( Update 2002.01.27 )
 =-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-=

  1. What is Freyja?

  2. What are supported platforms and required libraries?

  3. What model formats are supported?

  4. How do I get source code and update from CVS?

  5. How do I setup Freyja?

  6. How can I help?

  7. How does Texel generation XY hack work?

  8. How does Texel combine work?

  9. How does bbox select (the rectangle icon) work?

 10. How does Vertex UV work?

 11. How does MLISP scripting for gtk+ work?

 =-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-=

  1. What is Freyja?

     Freyja is a 3d modeler in development.  The goal is to 
     produce a 3d modeler with skeletal animation, mesh editing,
     particle effects, and a shader system.  Freyja will make 
     extensive use of pulgins more than just for format 
     compatibility in the future also.

     As of 0.3.0-20020127 some functionality is broken due to
     moving to Gnome as the new interface toolkit and a new
     backend at the same time.  The stability should be fairly
     solid at this point, and usabilty improves daily.  MLISP
     scripting is now used for ~80% of the functional interface,
     so you can edit the GNOME interface without recompiling or
     add your own favorite commands in the way you like.

     Please report bugs and feature requests instead of complaining 
     on message boards.  Send bug reports and feature requests via
     email or use the project's web site.
    
 =-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-=

  2. What are supported platforms and required libraries?

   Freyja is only known to build on x86 Linux for now.  The
   requirements presented here are what Freyja is developed on.
   Most likey it will work on more versions than listed.

   The requirements: ( As of 2002.01.27 )
    + Linux 2.4.16 #SMP (Debian distrobution)
      + GCC 2.95.2 compiler and supporting development packages
      + X11 4.1.0 with X11 development package
      + OpenGL 1.2 core and utils development packages
      + GTK 1.2 core and development packages
        + libgtkgl 4.1.0 with development package
      + GNOME 1.4 core and development packages
      + libfreyja_egg 0.8.10 with development package
        + lib3ds 1.1
      + libmtk_image 0.1.1 with development package
        + libjpeg 62.0.0
        + libpng 2.1.0
        + libz 1.1.3


 =-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-=

  3. What model formats are supported?

     Any model formats supported by libfreyja are supported.  You
     can also write custom plugins for your own model formats, or
     ones that haven't been written yet.


     libfreyja_egg v0.8.9 is bundled with plugins for:

     Importing:
     EGGv7, EGGv8, MDL, MD2, MD3, HalfLife, TombRaider[1-4], ASE, 
     NOB, LWO, TRMesh, and 3ds

     Exporting:
     EGGv8, MD3 (map models), MDL (exp), and ASE (exp)

     Prototype import plugins:
     UT, Rune, MilkShape, Deus Ex, and DXF

 =-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-=

  4. How do I get source code and update from CVS?

   4.1. Install CVS:

       Linux  : http://www.cvshome.org/
       Windows: http://www.wincvs.org/ 
       MacOS  : http://www.maccvs.org/ 
       BeOS   : ftp://ftp.ninemoons.com/pub/geekgadgets/be/
       Other  : http://www.cvshome.org/dev/codes.html

       If you have Debian Linux use the command: 
          apt-get install cvs


   4.2. Use these commands to get Freyja for the first time:

	Replace SERVER with 'cvs.GooseEgg.sourceforge.net'
        without the quotes.

        cvs -d:pserver:anonymous@SERVER:/cvsroot/gooseegg login
        cvs -z3 -d:pserver:anonymous@SERVER:/cvsroot/gooseegg co mtk_image
        cvs -z3 -d:pserver:anonymous@SERVER:/cvsroot/gooseegg co freyja_egg
        cvs -z3 -d:pserver:anonymous@SERVER:/cvsroot/gooseegg co Freyja_Gnome


   4.3. After you get a cvs module you can update at any time by:

       Change to the directory for example 'freyja_egg':

          cd freyja_egg
          cvs -z3 update -d

       Note that you should always update both freyja_egg and
       Freyja_Gnome when you update.  Both are updated often, and
       features in both change in sync.

 =-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-=

  5. How do I setup Freyja? 

     GooseEgg/Freyja Setup:

   5.1. Install OpenGL and your 3d card drivers.

        Try these URLs for help:
           http://www.opengl.org/Downloads/Downloads.html
           http://www.mesa.org
           http://utah-glx.sourceforge.net
           http://dri.sourceforge.net
           < your GL card company's web site >

        Please read your OS documentation for 3d setup.

        OpenGL 1.2.x or higher is required.

   5.2. Building and installing libfreyja_egg

        Freyja now requires Egg as a library, as Egg is no
        longer distributed with the Freyja source.  Read
        the section on how to get source from CVS, get the
        freyja_egg module then make and install it.

        As a user:

           make debug
           mkdir ~/.freyja/plugins
           make plugins
           make install-plugins

        As root:

           make install
           ldconfig

   5.3. Building and installing mtk_image

        Freyja now requires MtkImage as a library, as it's
        longer distributed with the Freyja source.  Read
        the section on how to get source from CVS, get the
        mtk_image module then make and install it.

        As a user:

           make debug

        As root:

           make install
           ldconfig
   

   5.4. Building and installing Freyja_Gnome

        Read the section on how to get source from CVS, get
        the Freyja_Gnome module then make and install it.

        As a user:

           make
           mkdir ~/.freyja/icons
           sh setup-freyja.sh

        As root, if you wish to install system wide:

           make install
        

   5.5. ~/.freyja data directory setup Check

        After freyja_egg and Freyja_Gnome setup the
        contents of ~/.freyja should look something like:

           freyja.mtk   freyja.rc   freyja.menu 
           models/      palettes/   prefabs/
           testpak/     textures/   plugins/     
           icons/
       

   5.6. MLISP scritping

        Most of the GUI is controled via MLISP now.  See
        the FAQ section on MLISP.  The filename is
        ~/.freyja/freyja.menu, even though it handles a
        hell of a lot more than menus.   =)

 =-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-=

  6. How can I help?

   6.1. Test and file bug reports.  Join the mailing list and
        discuss problems/design issues. This is the single best 
        way to help.

   6.2. Fix broken code or contribute new plugins.
        If you want to join the project, then submit some code
        first.  Right now this is a one man project.

   6.3. Get me specs for model formats!
        This is really needed for complex formats, since
        I don't have time to RE all the dozens of formats.

   6.4. Help me get some newer hardware.  I use a dual 266Mhz 
        IBM M Pro with G400 right now.  Know any discounts or have
        some old disks?

 =-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-=

  7. How does Texel generation XY hack work?

     1. Move your mesh into positive XY quadrant close to origin.
        you can make texels overlap symeteric models by placing
        them on the Y axis in the geometeric center.
     2. Have your model 'face' you in the XY plane view.
     3. Click TexelGen

     Now when you go to Shader/Texel editor you'll see a fairly
     done skinning.  It's not perfect but works better than doing
     it all by hand.  =)

 =-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-=

  8. How does Texel combine work?

     1. In Texel/Shader edit select a texel.
     2. Click TexelCom
     3. Select a texel to merge with
     4. Click TexelCom
     5. Repeat as often as you like

     The reason you have to do this is a precaution to hosing
     your texel map by clicking too much or accidentally.  

     There is no texel splitter in yet, so be careful, as some
     formats like Tombraider expect polygons not to share texels.
     However, this is rare for model formats not made for console
     game systems.  If you use textile mapping don't use this.  If
     you don't know what texture tiles are you don't use them.  =)

 =-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-=

  9. How does bbox select (the rectangle icon) work?

     1. Click Select by BBOX
     2. Drag the min and max nodes to make a bounding box
     3. Click Select by BBOX to make a list of vertices
        for cutting/copying/etc.
     
     This tool is merely for selecting objects and partial objects.
     It has no special function of it's own.  Later when Copy and
     and Cut are added this will be your first step.

 =-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-=

 10. How does Vertex UV work?

     When toggled VertexUV makes combined texel/vertices.  This
     makes the model editing incompatible with tombraider, but
     makes the model more effienct to edit and store.  Later I
     will add an option to 'split' texels, so you may export to
     tombraider.  ( As of this writing direct tombraider export
     isn't in this version of the modeler anyway. You have to use
     tools provided by sister project OpenRaider to convert. )

 =-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-=

 11. How does MLISP scripting for gtk+  work?

  11.1. What is it?

        MLISP is a lisp like domain language I wrote to avoid 
        having to write large amounts of gtk+ code in C.  It
        allows users and developers to alter Freyja's interface
        without recompiling and at a much faster pace.  One line
        of MLISP may be functionally equivalent to 50 lines of
        C or more.  If you haven't noticed, since I wrote MLISP 
        and did the gtk+ bindings to select gtk+ widgets, 
        productivity in this project has hit it's peak.  =)

  11.2. How can I use it?

        As a user you don't have to worry about the detials,
        so all you have to do is look at the current script
        file and learn from example.  Below is a snipet that
        makes the notebook widget ( only one notebook is 
        allowed ), then appends a tab with a single button.

           (notebook 
                (tab "tab1" "Mesh" 0
                    (hbox 1 0 0 1 0
                           (button "Delete Current Mesh" 
                               EVENT_MESH  CMD_MESH_DELETE))
            ))

        You can also set some interface varibiles like color.
        Colors are Red Green Blue from 0.0 to 1.0.  Colors
        were added to aid color blind users, but it seems
        everyone likes there own scheme as well. Below is a 
        snipet that sets the background color to a medium gray.

           (color COLOR_EDIT_BG  0.5  0.5  0.5)


  11.3. What happened to MtkGL Script?

        MLISP replaces MtkGL Script, but I may add a binding to
        mtk_gl in the future if I get enough requests.