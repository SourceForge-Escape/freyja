
 =-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-=

  File     : ChangeLog
  Project  : Freyja 0.3.5 'Chimera'
  Author   : Terry 'Mongoose' Hendrix II

  Release cycle notes
     EVEN numbered releases are STABLE
     ODD  numbered releases are UNSTABLE
 
   ______________
  |              |  [ In the source code you'll see these defines ]
  |              |  
  |              |  FIXME        : Broken code or a hack to be replaced
  |              |  OBSOLETE     : Outdated code from an older version
  |              |  EXPERIMENTAL : Experimental code only in debug build
  |______________|

 Assert is now used to enforce stronger Design By Contract in the APIs.
 Until now each layer has been doing error correction and handling it
 shouldn't have been doing.  This means fucked up API use will now cause
 program halts, so watch your ass and use the DBC which are clearly listed
 in class headers.  If you get assertion errors testing, then email them.

 There is a ~/.freyja/Freyja-chimera.log you can send in with bug reports.

 =-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-==-=

 freyja (svn) "NeoUmbra" Mongoose <mongoose@icculus.org>

	o .desktop update for GNOME 2.10
	o Refactoring removed EggPlugin exposure
	o libfreyja aquires lighting, render structure, and action template
	  from freyja
	o libfreyja wrapped in C#
	o Opengl-sharp support for mlisp# prototype outside svn
	o Gtk# support for mlisp# 
	o mlisp# completed


 freyja (20050408) "NeoUmbra" Mongoose <mongoose@icculus.org>

	o Please report any issues including performance affected by this release
	o FileChooser support, with texture preview using image plugins
	o Extrude face tool added, now new extrude face is set as vertex list
	o Face splitter
	o Recently opened files, and persistant recent files list
	o Mesh normal generation, tesselation, and normal flipping made easier
	o Fix for initial editing state invokation ( object move )
	o Fix for rendering bug on mesh delete using translator
	o Fix for mesh rotate on top view
	o New renderer updates to make editing easier
	o Moving more and more stuff behind libfreyja facade so I can do a rewrite
	o Some FreyjaModel API clean up, and code style/comment updates
	o New 'selected' box rendering ( cuter )
	o Removed meshtree renderer, 'flashing selection, etc -- file request if
      you want any of that back, since I thought they weren't useful anymore
	o Minor API clean ups in renderer now that it's getting some work on it
	o Updated renderer members to coding standards started after it was written
	o Folded some rendering methods into one where they were similar
	o Alternative renderer starts with translators for Egg faces, meshes, etc
	o Removed some junk code from FreyjaRender ( needs a rewrite )
	o Disabled per polygon POINT rendering for vertices
	o Removed Egg dependence in FreyjaControl
	o FreyjaEvent system actually used in test
	o Automatic user install from /usr/share data
	o Freyja d-bus prototyping in python


 Freyja (0.3.5-20050103) "Chimera" Mongoose <mongoose@icculus.org>

	o Auto update filedialog optionmenu added


 Freyja (0.3.5-20041228) 'Chimera' Mongoose <mongoose@icculus.org>

	o Fix for top vertexlist scaling
	o Temp UVMap generation/editing ( user controlled, only for polymapped )
	o 'Top' view is now actually a top view ( still used bottom )
	o Mesh bounding box rendering tied to point rendering control
	o Fix for polymapped UV generation from XY plane


 Freyja (0.3.5-20041226) 'Chimera' Mongoose <mongoose@icculus.org>

	o Fixes for UV editor
	o Texcoord transforms
	o Polygon material sets in interface


 Freyja (0.3.5-20041223) 'Chimera' Mongoose <mongoose@icculus.org>

	o UVMap editing support starts - testing with per polygon UV transforms
	o Fixed 'hopping' bug -- caused by attrib stack use, my irc comments:
	  <Mongoose> <opengl> if you can alter this bit in my stack before
	             I pop the frame you are a master!
	  <Mongoose> <opengl> I can teach you no more
	o Vertex morphing back -- use group iterator to cycle frames


 Freyja (0.3.5-20041215) 'Chimera' Mongoose <mongoose@icculus.org>

	o Culling for vertex list enabled!


 Freyja (0.3.5-20041214) 'Chimera' Mongoose <mongoose@icculus.org>

	o Win32 builds for some libs ( without module support )
	o Mousable lighting added back ( middle button in anim view )
	o Vertex list generic transforms
	o Vertex list/buffer aka 'selected vertices' can do partial
	  copy/pastes of meshes -- no culling yet due to Egg polygon removal


 Freyja (0.3.5-20041213) 'Chimera' Mongoose <mongoose@icculus.org>

	o VERY hacky 'blended plane' editing in free mode 
	o vertex selection by bounding box fixed
	o tombraider.so changes: broke animation fixed space translator


 Freyja (0.3.5-20041211) 'Chimera' Mongoose <mongoose@icculus.org>

	o Rendering changes for grid system to aid 'to scale' editing
	o Saving file now updates recent list and actions based on it
	o Points new default joint render type
	
	
 Freyja (0.3.5-20041207) 'Chimera' Mongoose <mongoose@icculus.org>

	o smd and obj plugins written last night are now offical plugins
	o Patch mesh tool


 Freyja (0.3.5-20041203) 'Chimera' Mongoose <mongoose@icculus.org>

	o More menu/ui updates
	o Some TODO items removed for this build's goals -- due to Umbra


 Freyja (0.3.5-20041203) 'Chimera' Mongoose <mongoose@icculus.org>

	o Fixed ASE export crash with skel mesh models?
	o Polygon side count back in GUI under prefs dialog
	o Mesh center move event from menu fixed
	o Bone iterator ( spinbutton ) crash fixed with a safety check
	o Transform box child events handled in proper handler now
	  ( basically all this means is no 'unhandled event' messages
	o Normal generation fixed


 Freyja (0.3.5-20041201) 'Chimera' Mongoose <mongoose@icculus.org>

	o Insanity at it's finest: exhaustively complex file dialogs
	o Prompts for file overwrites on save
	o Fix for revert crash when no model was loaded
	o Menu actions that aren't done but hooked up: undo, redo, selectall
	o All menus should have actions now, eg: revert, append, etc
	o Fix for infamous null polygon render crash ( Egg issue )
	o Fix for 'bone name update overwrite' bug
	o NULL bone names no longer allowed
	o Bone tree widget should now properly update skeleton changes
	o Lots of the bone editing iterface fixed
	o Generic Transform submenu for Tools with key shortcuts 
	o Bone naming back in interface
	o Several missing interface options returned
	o VertexCombine back in interface, oops
	o Tons of iterface fixes 

	
 Freyja (0.3.5-20041130) 'Chimera' Mongoose <mongoose@icculus.org>

	o Redraw on copy/cut/paste
	o Attempt to fix crash, fixed mstl Vector::remove to avoid
	  bad indices
	o Lame UV  XY plane gen back in interface
	o Removed utils.o dep
	o Multicopy mesh mode ( Appends each copied polymesh to buffer )
	o Mesh mode copy/cut/paste finally reimplemented


 Freyja (0.3.5-20041129) 'Chimera' Mongoose <mongoose@icculus.org>

	o 'Chimera' build done now replaces this build as stable
	o Many minor fixes, and perhaps a few regressions
	o One day test/fix cycle for all known regressions
	o BUGS updated
	o New log file is now stored in ~/.freyja/ instead of /tmp
	o Many changes to event system
	o New color system
	o New preferences dialog
	o New interface
	o New libmgtk+ widget support backported from Umbra


 Freyja (0.3.5-20041110) Mongoose <mongoose@icculus.org>

	o Made freyja8 build co-installable with umbra tracer

 Freyja (0.3.5-20040817) Mongoose <mongoose@icculus.org>

	o Full mesh highlight for current mesh back ( less confusing )

 Freyja (0.3.5-20040815) Mongoose <mongoose@icculus.org>

	o Skeletal creation ability back ( limited )
	o Bone transform mode back
	o Removed many events
	o Released more doom3 support
	o New screen to world coord
	o Window title change with model load

 Freyja (0.3.5-20040809) Mongoose <mongoose@icculus.org>

	o Moved most widget callbacks into control!
	o Removed a lot of dead code
	o Generic transforms support
	o Moving text messages back into lisp control
	o New mouse event code
	o RC system reduction
	o Confirm dialogs back
	o Generated meshes now sized to default zoom level
	o Fix for skin tab events
	o Mouse editing back to old keys
	o Color button from new gtk+ added to mgtk interface
	o Misc event system changes
	o New mouse motion event code
	o Fixes for HIG compliant menu
	o New event system plugins start

 Freyja (0.3.5-20040801) Mongoose <mongoose@icculus.org>

	o Accel keys 100% functional	
	o Context sensitive file operations done
	o Disabled mouse event system to be rewritten
	o Disabled GL widget's key capturing
	o Removed more 'dead' events
	o New context sensitive menus and toolbars start
	o New Menu HIGness: icons, accels, etc

 Freyja (0.3.5-20040605) Mongoose <mongoose@icculus.org>
	
	o File dialog pattern use
	o Ctrl+LeftMouse click to select mesh back

 Freyja (0.3.5-20040605) Mongoose <mongoose@icculus.org>

	o New skeletal view type interface
	o Fixed null mesh skin edit crash
	o New filedialog button to go back to freyja homedir

 Freyja (0.3.5-20040601) Mongoose <mongoose@icculus.org>

	o Fixed Mlisp scoping and ordering issue
	o A little more interface trimming and decoupling
	o Updated freyja BUGS / TODO

 Freyja (0.3.5-20040526) Mongoose <mongoose@icculus.org>

	o Some more Mlisp debugging
	o Blending reenabled, but not fixed properly

 Freyja (0.3.5-20040525) Mongoose <mongoose@icculus.org>

	o Fixed segfault on EVENT_SHUTDOWN in new shutdown event

 Freyja (0.3.5-20040524) Mongoose <mongoose@icculus.org>

	o Decoupling more gtk+ widgets interface and freyja event system
	o More decoupling of mlisp-gtk and Freyja
	o Moved more event/control back into Freyja core

 Freyja (0.3.5-20040522) Mongoose <mongoose@icculus.org>

	o Fixed MaterialManager after move to FreyjaControl
	o FreyjaControl takes over removed events handling
	o New generic widget interface for FreyjaControl use
	o scrollbar events removed
	o freyja_event_interface_listener() 
	o file dialog wrappers removed
	o Event system trimming and refactoring continues

 Freyja (0.3.5-20040515) Mongoose <mongoose@icculus.org>

	* Event reporting from moudles to libs to app
	* Tracer observer type system for events starts with zoom test
	
 Freyja (0.3.5-20040510) Mongoose <mongoose@icculus.org>

	* Quick add back of mesh mouse based scale/rotate
	* All Freyja event handlers moved back into FreyjaControl
	* Removing more and more of event system for rewrite

 Freyja (0.3.5-20040506) Mongoose <mongoose@icculus.org>	

	* FreyjaModel removed Vector<T> internal iterator use
	  Bugs and halairity ensue shortly
	
 Freyja (0.3.5-200404XX) Mongoose <mongoose@icculus.org>
	* About dialog back
	* Normal vector rendering mode
	
 Freyja (0.3.5-20040422) Mongoose <mongoose@icculus.org>
	
	* New material managing system starting
	* New GUI elements and refacoring
	* Gtk+ stock theme support
	
 Freyja (0.3.5-20040420) Mongoose <mongoose@icculus.org>

	* Use of WM hooks to set a X, Y pos of window from mlisp
	* Fix for spinner bug?
	* Implementations for window manager hooks

 Freyja (0.3.5-20040419) Mongoose <mongoose@icculus.org>

	* Model info command
	* Fixed a tiny bug in Mlisp with valgrind ( big headache )
	* Fixed UV edit bug for nonpolymapped Eggv8
	* Fixed UV gen crash bug for nonpolymapped Eggv8
	
 Freyja (0.3.5-20040418) Mongoose <mongoose@icculus.org>

	* New website made for http://icculus.org/freyja
	* New icculus.org CVS hosting, unraider dropped
	* Mlisp comes to freyja from Midgard to replace the old Mlisp
	  prototype from like 1999 called Resource
	
 Freyja (0.3.5-20040416) Mongoose <mongoose@users.sourceforge.net>

	* Removed FreyjaRender's event handler
	* toolbar_button created for nontoggling icon buttons
	* Moving event system to FreyjaControl, away from Render and
	  Model
	* handlebox moved to mlisp proper
	
 Freyja (0.3.5-20040413) Mongoose <mongoose@users.sourceforge.net>

	* Refresh context for render mode changes
	* Handlebox for menubar
	* Disabled scrollbars and rulers from view per request
	* More stdout messages are sent into the console system now
	  to make bug reports easy
	* Made several classes less noisy on stdout
	* Removed FreyjaResource messages sent to stdout
	* Cleaned up several Gtk+ warnings from menubar casting
	
 Freyja (0.3.5-20040412) Mongoose <mongoose@users.sourceforge.net>

	* Floating menubar ( remove comments in freyja.mlisp to use )
	* Gtk+ menubar support back in, freyja.el now uses it by default
	* Disabled normal rendering toggles, always on for lighting now
	* Starting to use assert() see this file's header, if it goes
	  well I might make an assertion system like the memory debugger
	* New console logging system
	* New icons pak
	* Moving more methods to private exposure to reduse interdependence
	* Event system is being evaluated to be reduced before
	  it's refactored
	* New API changes from 20040411 continue
	
 Freyja (0.3.5-20040411) Mongoose <mongoose@users.sourceforge.net>

	* Many, many changes with rewrite of backend systems not listed
	* Makefile no longer builds gtk+1.2 ( broke )
	* Fixed crash from mesh iteration interaction in interface
	* GNOME support is out, gone
	
 Freyja (0.3.5-20040403) Mongoose <mongoose@users.sourceforge.net>

	* Particle editor removed 
	  ( Old particles are being replaced by hel physics based ones )
	* GCC 3.x fixes
	* Using new libfreyja_model and libfreyja_image lib names
	
 Freyja (0.3.5-20040401) Mongoose <mongoose@users.sourceforge.net>

	* Fix for texture loading, which was caused by texture system
	  init before GL init
	* Skeletal system rendering fixes and features
	
 Freyja (0.3.4-20040330) Mongoose <mongoose@users.sourceforge.net>

	* FreyjaRender removed Camera and much more
	* Continued ripping out dead code
	
 Freyja (0.3.4-20040327) Mongoose <mongoose@users.sourceforge.net>

	* HUGE bug fix with EggPlugin loading 2x joints needed  =0
	* Gtk+ application icon support added
	
 Freyja (0.3.4-20040326) Mongoose <mongoose@users.sourceforge.net>

	* Texture support guled back together ( may be subtle bugs )
	* gl_utils removed
	* FreyjaRender skin mode uses Vertex UVs if no ext texels
	* FreyjaModel loses Material and Texture
	* Mtk Texture replaced with Midgard Texture
	
 Freyja (0.3.4-20040325) Mongoose <mongoose@users.sourceforge.net>

	* TextureManager removed
	* Material per texture use now
	* FreyjaRender removed laughable code from 1999 and earlier
	  that wasn't even used anymore
	* Replaced entire Material control / model / view path
	  cleaned up a lot of obsolete code and broke old features
	* MaterialManager created as test for new less centralized
	  Control for the MVC system
	
 Freyja (0.3.4-20040324) Mongoose <mongoose@users.sourceforge.net>

	* Documentation resync
	* Skeletal tree widget population still acting up
	* Found/Fixed untextured model load crash introduced yesterday
	* Broke bbox selection use?
	* FreyjaModel moved mesh generators down into EggPlugin 
	* FreyjaModel removed some obsolete and rarely used code
	* Improved make system with auto deps 
	  ( If you use gtk+1.2 you may have to alter the BASE_DEF )
	* Gtk+ 2.0 build no longer builds in it's on bin/ 
	* Gtk+ 2.0 new default build, and may remove gtk+ 1.2 support
	  ( To be honest I've used 2.0 since the 1.3 days anyway )
	* Lots of minor touch ups to match new backend changes
	* Animation view now renders same Y as mesh editing, and if
	  you wonder why I used to invert Y TombRaider does  =)
	* Gtk+ 2.0 fixes and touch ups to remove runtime warnings,
	  fixed animation tree widget, and rewrote mlisp interface
	* New light icon is 3d sphere
	* Data structure change, Vector replaces List use mostly
	  Improves speed and memory usage in general case, but
	  might use more memory for sake of speed for larger models
	  ( eg 130,000 tombraider animation frames is 'large' )
	
 Freyja (0.3.3-20020831) Mongoose <mongoose@users.sourceforge.net>

	* Better bone rendering
	* Removing crap tag editing code that works on offsets
	  absolute values only gees   =p
	* Fix for scrollbar crash in gtk+ 2.0 build
	* Deps make system
	
	
 Freyja (0.3.3-20020708) Mongoose <mongoose@users.sourceforge.net>

	* New Texture system from merge of UnRaider/OpenRaider/Freyja
	* Fix for Makefile to enable OPENGL use in material, etc
	* Fix for material multitexture activation ( Still experimental )
	* Fix cube generator uses correct texels like old one
	
	
 Freyja (0.3.3-20020707) Mongoose <mongoose@users.sourceforge.net>

	* New initial material values
	* Status bar in gtk+ 2.0 build
	* Fix for render polygon caching


 Freyja (0.3.3-20020703) Mongoose <mongoose@users.sourceforge.net>

	* Multitexture support in Material, might cause rendering bugs
	* Refactored Material, moved rendering to Material also

	
 Freyja (0.3.3-20020701) Mongoose <mongoose@users.sourceforge.net>

	* Fix for Gtk+ 2.0 widget keys

	
 Freyja (0.3.2-20020419) Mongoose <mongoose@users.sourceforge.net>

	* Toolbar/toolbar toggle button in RC script control space
	* Toolbar toggle buttons factored out some

	
 Freyja (0.3.2-20020417) Mongoose <mongoose@users.sourceforge.net>

	* Need to work on implementing new event design soon
	* Merge of little fix from laptop and ws trees
	
	
 Freyja (0.3.2-20020408) Mongoose <mongoose@users.sourceforge.net>

	* Fix for Gnome build toolbars
	* Gtk+ 2.0 tree support starts
	* Fix for Gtk+ 2.0 build title
	* Fix for Gtk+ 2.0 build filedialog size
	* Correct rotation for animation view
	* Gtk+ 2.0 build usable by mortals  =)
	
	
 Freyja (0.3.2-20020322) Mongoose <mongoose@users.sourceforge.net>

	* gtk+ 2.0 build works 'out of box'


 Freyja (0.3.2-20020310) Mongoose <mongoose@users.sourceforge.net>

	* Added a usleep to gtkglarea wrapper to help stop 
	  too many refresh event requests
	* New messages for hints when building
	* Gtk+ 2.0 builds with gtkglarea support by default now
	
	
 Freyja (0.3.2-20020307) Mongoose <mongoose@users.sourceforge.net>

	* FreyjaRender rotation is 'tighter'
	* FreyjaRender init setup changed

	
 Freyja (0.3.2-20020301) Mongoose <mongoose@users.sourceforge.net>

	* Of course a lot of stuff broke: 
	  polygon rendering, model editing, others?
	* Everyone will hate this, but I decided to add a major
	  speed boost to the rendering by extending the backend


 Freyja (0.3.2-20020228) Mongoose <mongoose@users.sourceforge.net>

	* FreyjaModel indexed images in models supported agian
	* FreyjaRender rendering with normals back
	* FreyjaModel light fixes
	* FreyjaRender removed autorotate crap
	* FreyjaRender texture binding fix? by using a new wrapper
	* FreyjaRender draw_sphere minor speed improvements

	
 Freyja (0.3.2-20020226) Mongoose <mongoose@users.sourceforge.net>

	* New tgz package scripting, so I can bundle bins from
	  my reet make system

	
 Freyja 0.3.1 Release ( "I gotta believe!" )

	* Delays delays - better a day late than corrupt 
	  files I always say
	* This release is dedicated to Chuck Jones and all
	  the people rapp'n cool out there
	
	
 Freyja (0.3.1-20020224) Mongoose <mongoose@users.sourceforge.net>

	* Fix for emitter rendering
	
	
 Freyja (0.3.1-20020223) Mongoose <mongoose@users.sourceforge.net>

	* Emitter editing interface hook-up nearly finished
	* Emitter file I/O activated
	* Fixed gtk+ 2.0 segfault on exit and added kb/mouse hooks
	* Use -DFORCE_GLAREA_GTK_2_0 to force a gtk+ 2.0 build to
	  use gtkglarea widget in Makefile.am CONFIGURE_CFLAGS
	* Had to disable GtkGLArea due to conflicts with gtk+ 2.0,
	  so gtk+ 2.0 build only a tech demo for mlisp I guess  =)
	* Gtk+ 2.0 interface building and running ( make gtk2.0 )
	* GUI is working agian with new codebase ( Should look same to
	  users hopefully, aside from some gnome_docks being removed )
	* Major reshuffling of widget boundaries ( broke windowing )
	* Strict widget type checking in gnome interface resource
	* Refactoring and reduction all round in gnome interface
	* Heavy refinement and retooling of gnome/gtk+ interface
	  wrapper ( look out for bugs )

	
 Freyja (0.3.1-20020221) Mongoose <mongoose@users.sourceforge.net>

	* Script syntax changes
	* Moved all window/widget control to scripting system
	* Made event_init higher in loader ( in window level )
	* Removed all code to hardcoded animation spinbuttons
	* Removed last of hardcoded tabs 
	  ( For now animation tab is partially script controlled, 
	    since some of it's widgets have no script implementation )
	* Purged last of hardcoded key commands from source tree
	* Screenshot using MtkImage now
	* Autoconf fix
	* INSTALL update
	
	
 Freyja (0.3.1-20020220) Mongoose <mongoose@users.sourceforge.net>

	* Key scripting enabled agian
	* Roadmap update
	* More design research
	* Tracer for FreyjaEvent

	
 Freyja (0.3.1-20020219) Mongoose <mongoose@users.sourceforge.net>

	* Internal lib versioning check for libfreyja_egg v8.11
	* Getting ready for freyja_egg final release, and replace
	  with libfreyja_model backend
	* New container system implementation should speed 
	  up the program a little until new backend is done
	
	
 Freyja (0.3.1-20020216) Mongoose <mongoose@users.sourceforge.net>

	* Control handles freyja.menu/freyja.el/freyja.mlisp filenames
	* Missing freyja.menu/freyja.el is now a fatal error
	* Generic mouse scaling operation
	* Changes to TODO, Roadmap updates and pruning
	
	
 Freyja (0.3.1-20020214) Mongoose <mongoose@users.sourceforge.net>

	* Fix for gtk+ togglebutton weridness ( event echo )
	* New togglebutton rc interface into the 2 way control
	* Fixed some file I/O bugs in Material
	* Unit testing expanded in Material - found some bugs
	* New optionmenu rc interface into the 2 way control
	
	
 Freyja (0.3.1-20020213) Mongoose <mongoose@users.sourceforge.net>

	* Gtk+ 1.2 and Gtk+ 2.0 build design 
	  ( Prototype dummy interfaces to see how to replace GNOME )
	* New textbox resource and a gtk+ implementation for it
	* New Gtk+/Gnome resource assertion reporting
	* More design work
	
	
 Freyja (0.3.1-20020209) Mongoose <mongoose@users.sourceforge.net>

	* Material GUI sync to uploaded/changed current 
	* ChangeLog fix
	* libfreyja_model, libfreyja_particle, and libfreyja_shader
	  work continues ( to replace libfreyja_egg and etc )
	
	
 Freyja (0.3.1-20020209) Mongoose <mongoose@users.sourceforge.net>

	* Yay!  I got my new (used) scsi disk up and running to
	  replace the damaged old one -- project is active agian

	
 Freyja (0.3.1-20020203) Mongoose <mongoose@users.sourceforge.net>

	* Autocrap for everyone that wanted it - if it doesn't
	  build for you now you're just screwed I won't support
	  automake/autoconf but I will take patches  ^_^


 Freyja 0.3.0 Release ( "ITS A SECRET TO EVERYONE" )


 Freyja (0.3.0-20020202) Mongoose <mongoose@users.sourceforge.net>

	* Roadmap changes, since I missed the 0.3.0 milestone,
	  I'm going to try and pad them more in the future b/c
	  when I get sick or something there are no other coders
	  in this project to put my work on atm  =)
	* Prototype GUI animation tree test code
	* Removed ( obsolete? I hope ) EVENT_MAIN commands
	* Resource memory flush option
	* FreyjaRender minor reductions and speed improvements
	* FreyjaRender API/Documentation updates
	  ( This inculdes updates to other affected systems )
	* More user feedback on mode changes
	* More trimming the fat and user improvements before release!

	
 Freyja (0.3.0-20020201) Mongoose <mongoose@users.sourceforge.net>

	* Zoom spinbutton in mlisp script ( was just keys )
	* EDIT_WITH_ZOOM no longer compile time option, so
	  resync of zoom disabled on edit switching
	* ScreenToWorld reduction
	* EDIT_WITH_ZOOM fix
	* Switched Texture to MODEL control, and adjusted 
	  texture index base in RENDER
	* User feedback on load/save
	* Material loading ( hhmm... did internal scripting 
	  to keep it independent of the Resource classes )
	* New logo/icon/about image for the public release
	* Fixed gtk+ widget indexing and two way value use
	* Fixed some number key shortcuts interfering with
	  typing in values ( Now requires key modifer )
	* Material save
	* Got out old 'true' Map class and fixed it up all nice
	* Minor reduction in event system

	
 Freyja (0.3.0-20020131) Mongoose <mongoose@users.sourceforge.net>

	* Hacky fix for gtk widget mapping to events for adjusting
	  widget values
	* Light icon changed to wireframe cube like 'table' 
	  ( Funky shape was confusing and ugly )
	* Cylinder mesh generator
	* Sphere mesh generator
	* Material editing on sphere 
	  ( Enable Material render, then click Shader tab)
	* Camera icon

	
 Freyja (0.3.0-20020130) Mongoose <mongoose@users.sourceforge.net>

	* Looked into gtk+ 2.0 build, for down the road hmm...
	* Thankful I added a week to 0.3.0 release date b/c
	  I got food posioning like almost the next day after
	  issuing release date deadline  =(

	
 Freyja (0.3.0-20020127) Mongoose <mongoose@users.sourceforge.net>

	* Milestones ( oh no, we're starting to plan ahead! )
	* Fix CVS commit of Light test class skeleton
	* Documentation update
	* Fix for generic spinbutton event typing
	* Emitter editing test moved to FreyjaModel

	
 Freyja (0.3.0-20020126) Mongoose <mongoose@users.sourceforge.net>

	* New script widgets for some common menu use
	* Fixes for blending use
	* Reenabled material texture binding ( has presidence )
	* Disabled material texture binding for now 
	  ( Conflicts with current texture binding system )
	* New Material editing testing
	* New Material rendering testing 
	* LIGHT0 testing with user movement back in
	* Material editing work starts

	
 Freyja (0.3.0-20020125) Mongoose <mongoose@users.sourceforge.net>

	* Generic typed spin button event functions
	* Fix for impromper shutdown via WM close

	
 Freyja (0.3.0-20020124) Mongoose <mongoose@users.sourceforge.net>

	* Commiting TAGS to cvs - you know you want it
	* Polygon selected is red in shader view
	* Huge update to shader tab UI
	* EVENT_MATERIAL implemented
	* Shader tab replaced my scripted shader tab
	* New optionmenu resource type
	

 Freyja (0.3.0-20020123) Mongoose <mongoose@users.sourceforge.net>

	* New button resource type
	* New togglebutton resource type
	* New hsep/vsep widgets resource types
	* New 'advanced spinbutton' resource type
	* Scripting for particle tab almost ready for use
	* More symbol convence functions inculding ambigous 
	  numeric macros, typed symbol requests, etc
	* Negative numbers are okie with me (resource fix)   =)
	* Clean up in gnome interface - remove hardcoded stuff
	  replaced by script
	* Resouce fix ( start on mesh mode )

	
 Freyja (0.3.0-20020122) Mongoose <mongoose@users.sourceforge.net>

	* More Resource fixes
	* Resource fixes
	* Tab script support working now for some widgets
	* New script file vbox/hbox full support
	* Started on vbox/hbox containers
	  ( will be the only containers used from script )
	* Material update ( about ready to add to editor now )

	
 Freyja (0.3.0-20020121) Mongoose <mongoose@users.sourceforge.net>

	* Minor GNOME interface updates to user's eye
	  ( I haven't implemented gtk+/resource containers yet )
	* New gtk+ spinbutton resource support/requirement
	* New gtk+ label resource support/requirement
	* New gtk+ tab resource support/requirement
	* New gtk+ notebook resource support/requirement
	* Some gtk+ interface reduction ( less duplicate code )
	* New gtk+ seperator resource support
	* New menu_seperator resource requirement
	* New freyja.menu using C++ mapped symbols
	* Resource C/C++ generic symbol binding implmented
	  ( This is a really big deal actually )
	* Material system starts

	
 Freyja (0.3.0-20020119) Mongoose <mongoose@users.sourceforge.net>

	* Axis 'notify thingy' farther to left 
	* FreyjaModel::TexelCombine fix to avoid 'toggling reload'

	
 Freyja (0.3.0-20020119) Mongoose <mongoose@users.sourceforge.net>

	* New Egg::VertexCombine use
	* New root menu item 'File'
	* Finally, Two way event starting system back

	
 Freyja (0.3.0-20020118) Mongoose <mongoose@users.sourceforge.net>

	* Reduced UV generation to func, so all should match
	* TriStrip Generator ( NOTE that Egg 8.10 doesn't have
	  a tri_strip type optimized polygon - Egg 9.00 does - 
	  so these are just triangles when rendered and in the 
	  backend )
	* Removed some odd static vars from FreyjaModel::GenCube
	* Fixed filedialog to NOT resize ( damn your eyes, gtk+ )
	* New scaled rotation of mesh for better control
	* Single texel vertices on by default
	* Bugfix for mouse editing

	
 Freyja (0.3.0-20020117) Mongoose <mongoose@users.sourceforge.net>

	* Mesh rotate now uses it's center as rotation point 
	  ( like gegg )

	
 Freyja (0.3.0-20020113) Mongoose <mongoose@users.sourceforge.net>

	* Minor changes in control/render
	* New UML design i/c ModelingSystem like the Egg v9.00
	  tracer is shaping into

	
 Freyja (0.3.0-20020113) Mongoose <mongoose@users.sourceforge.net>

	* New Resource API documentation updates
	

 Freyja (0.3.0-20020112) Mongoose <mongoose@users.sourceforge.net>

	* Major refactoring and clean up of everything...
	  users should notice little difference as all features 
	  were maintained from 0.2.3
	* Tag Add, Move, Add mesh to tag back
	* <Ctrl> mouse1 allows selection w/o switching modes
	* New able to recall last event from event system
	* Removed obsoleted source files
	* New FreyjaResource
	* Minor fixes to Resource and util string use
	* Forked from Freyja 0.2.3 branch

	
 Freyja (0.2.3-20020110) Mongoose <mongoose@users.sourceforge.net>

	* Texture list loading 'filename.lst' with texture filenames
	  seperated by ';' and full path names

	
 Freyja (0.2.3-20011112) Mongoose <mongoose@users.sourceforge.net>

	* Mesh copy. paste back in... when did it go?  heh I forget!
	  it's now partially implemented as 'Clone'
	* Looked at the mesh splitting/copy/cut/paste code

	
 Freyja (0.2.3-20011110) Mongoose <mongoose@users.sourceforge.net>

	* Hack/fix for mesh tag rotation
	* Screenshot fix ( uses origin flag )
	* Fixes for gnome menu shortcut key commands
	* Key commands no longer update display
	* Key command changes

	
 Freyja (0.2.3-20011109) Mongoose <mongoose@users.sourceforge.net>

	* New resource script release 'freyja.menu' that works
	  with the latest Resource system
	* Resource fixes
	* Menu loader fixes ( have to use numerics for event/cmd )


 Freyja (0.2.3-20011107) Mongoose <mongoose@users.sourceforge.net>

	* Resource more fixes for string checked into cvs,
	  and various related minor fixes
	* Resource fixes for 'true' string symbol and other fixes
	* FreyjaControl becomes owner of model/renderer
	* FreyjaControlGnome added for control of gnome View/Controller
	* app_main obsoleted
	* gtk_menu obsoleted
	* FreyjaControl::ReadRC obsoleted
	* Resource replaces ReadRC method and gtk_menu prototype


 Freyja (0.2.3-20011106) Mongoose <mongoose@users.sourceforge.net>

	* Resource ready to replace gtk_menu prototype and 
	  FreyjaControl::ReadRC method
	* Many Resource fixes to sym_tab, testing, etc
	* Resource tracer moved to unit testing support level, 
	  which means it will replace gtk_menu prototype as soon
	  as it's API and implmentation is stable to some degree

	
 Freyja (0.2.3-20011105) Mongoose <mongoose@users.sourceforge.net>

	* Tag editing interface testing
	  ( Egg v8.10 doesn't implment 'new' tags - just 'connective' )
	* Tag current highlighting,
	* Menu testing ( put tag select back on menu )
	* Cube generator for the hell of it 
	  ( and to remember exactly how whole meshes are generated )
	* FreyjaModel minor clean up


 Freyja (0.2.3-20011104) Mongoose <mongoose@users.sourceforge.net>

	* Fill GL window inside app
	* New GNOME naming scheme so .gnome won't be filled with
	  duplicate placement rcs for the same version 
	* Gtk interface source clean up ( reduced text segment a lot )
	* Gtk reduction to be used with scripting for now
	  reduces hand coded widget error and saves time
	* Documentation updates
	* Moving more source around to seperate GTK from 
	  control

	
 Freyja (0.2.3-20011103) Mongoose <mongoose@users.sourceforge.net>

	* Resource class tracer enters CVS tree

	
 Freyja (0.2.2-20011102) Mongoose <mongoose@users.sourceforge.net>

	* Removed some minor/obsolete object dependencies

	
 Freyja (0.2.2-20011101) Mongoose <mongoose@users.sourceforge.net>

	* Shader editor interface starting
	* Updated documentation ( FAQ ) to note MtkImage is
	  seperate and where to get it
	* MtkImage moved back into independent library to
	  reduce freyja codebase and to use in other projects

	
 Freyja (0.2.2-20011031) Mongoose <mongoose@users.sourceforge.net>

	* gtk_menu gets more support and even type checking and
	  error reporting when relating to C++ methods.
	  Ready to merge parts with Freyja class

	
 Freyja (0.2.2-20011030) Mongoose <mongoose@users.sourceforge.net>

	* gtk_menu now parses new lang, but doesn't implement actions
	  parses real numbers now also
	* Moved all current resource metadata into freyja.menu,
	  now I just need to implement it's full use in Freyja class
	* Disabled particle test render - you can reenable via
	  Makefile
	* You can disable axis current plane notify in Makefile now
	* Reduced hardcoded keys to one method
	* freyja.menu updated to be current with hard coded keys
	* More DRY and Law of Demeter enforcement  =)
	* Moved all Key event handlers to call events
	  Should be able to replace hardcoded Key handlers
	  with script agian soon now
	* Moved several event handlers back to Render
	* Render event handler back
	* Breaking the event system back up before gnome port
	* Moved several event handlers back to Model
	* Model event handler back


 Freyja (0.2.1-20011029) Mongoose <mongoose@users.sourceforge.net>

	* More clean up/removal of OBSOLETE code
	* Most pure event stuff removed apart from gnome stuff =)
	* Stripping out many refresh events... See BUG 031 
	* Textures can now be loaded out of order with shader tab's
	  texture spinner ( EXPERIMENTAL )
	* Texture backend now can load textures out of order agian
	* Able to load many textures (in order) from files agian
	  CLOSES BUG 021
	* Shuffling around code to get ready for refactoring,
	  so look out for bugs caused by this
	* Cleaned up freyja.h
	* Added my strdup and posix_filename to my utils
	* Shutdown cleans up deallocation agian
	* Fixed freyja_rc_map() design issues
	* Load from CLI or DnD changes default file dialog dir
	* Moved some buttons around to make more sense
	* More 'documentation in the widgets'
	* Fix for texture shift
	* Documentation changes


 0.2.1-20011028 (Gnome fork)
 [Mongoose]
  * TODO 
    - TextureManager or something to control loading out of
      order and etc to use with new Set Tex 
    - Move all the neat features over to GUI interface
    - Document features
    - Refactor GUI <-> Backend
  + Set texture per mesh ( Set Tex button )
     Had to add a lot of code for such a little feature  =)
  * Trying to start new documentation format in code
  + Removed scaling in low level drawing
  + Some clean up in FreyjaRender::DrawModel
  * New BUGS format to keep up with dates and retain closed bugs
    and date closed
  + Fixed bone rendering, and sped it up a tad
  * Profiling shows little room left for speed improvment, until
    the new backend is finished and replaces the old one
     ( See prof.log for the offenders, which are DS used in renderer )
  + More minor renderer changes ( major overhaul still needed )


 0.2.1-20011027 (Gnome fork):
 [Mongoose]
  + Blending disabled at start ( shader engine will later control this )
  + Some very minor refactoring and abuse of statics to boost speed
    a small bit
  + Makefile fix for profiling build
  + Started playing with renderer blending agian ( it all needs to go )
  * TODO allow shader editor select texture id per mesh via spinbtn
  + DEBUG flag required for key debugging in FreyjaControl::Key
  + Condensed key debugging from FreyjaControl::Key
  + GtkTree support for animation starts

	
 0.2.1-20011026 (Gnome fork):
 [Mongoose]
  + Major freyja_egg Md3 fixes ( backwards compatible with all EggPlugin )
  * More work on 0.3.x design
  + Minor TGA tweaks
  + UI changes
  * More testing


 0.2.1-20011025 (Gnome fork):
 [Mongoose]
  * Done some bug hunting and doc
  + Finer zoom control from kb
  + TGA origin bit support back in ( Fixes 'upsidedown tga' bugs )

	
 0.2.1-20010901 (Gnome fork):
 [Mongoose]
  + Slighty improved gtk_menu system ( still not ready to do all gtk in it )


 0.2.1-20010817 (Gnome fork):
 [Mongoose]
  + Hooked up animation slide event
  + Hooked up mesh/frame spin button events
  + Changes to AXIS_LIST rendering and more scaling changes

	
 0.2.1-20010816 (Gnome fork):
 [Mongoose]
  * Now I just have to finish up tabs in notebook to have a particle
    editer in Freyja  =)
  + Particles render mode controled by render toolbar
  + Emitter test controled by RENDER_PARTICLES render flag now
  + 'Internal' config source I will prob never use in config.mak
  + New Makefile to remove SDL build
  + New blending for particle rendering ( like my demo I released )
  + Moved animation control into tab
  + Fixed a bug in menu loader, looks like cvs sync overwrote with older file
  + Fix for event_print before appbar allocation (bad cast would be reported)
  + Notebook based toolbox


 0.2.1-20010802 (Gnome fork):
 [Mongoose]
  + Fixed crash on NULL mesh using mesh move
  + Menu scripting makes its way into CVS - run for your lives  =)


 0.2.1-20010729 (Gnome fork):
 [Mongoose]
  + Popup menu changes, scriptable popup menus coming back soon
    Please make sure there are no bugs in the menus - report problems
  * It's about time to stop patching back to old codebase and do a 
    clean rewrite - about all prototyping is done
  + Zoom on mouse scroll in view back in ( may not work GDK problems? )
  + Scene translate ( might be broken, I just hooked up the old event )
  + Rotate on axis view mesh with mouse
  + Rotate on axis edit mesh with mouse
  + Fixed bad event init in Control causing texel editing on view
    ( aren't you ready to go to new interface? )


 0.2.1-20010729 (Gnome fork):
 [Mongoose]
  + Auto shrink in window

	
 0.2.1-20010729 (Gnome fork):
 [Mongoose]
  + Option to create models using merged Vertices and Texels
    ( Don't bother with texter tile support )

	
 0.2.1-20010728 (Gnome fork):
 [Mongoose]
  + Fixed texel combine ordering issues ( requires new freyja_egg )
  + More status bar use
  + Disabled gnome key debugging
  + Disabled texel editing debugging
  + Disabled gnome mouse debugging
  + Smoother mouse motion control working?
  + Animation control now controls animation selection ( no playback )
    [<] Prev animation [>] Next aniamtion


 0.2.1-20010727 (Gnome fork):
 [Mongoose]
  - Removed some FreyjaRender obsolete and unified methods
  * Trying to unify OpenRaider and Freyja common util methods
  + Added TGA GL buffer dump code ( aka screenshot )
  - Removed PPM GL buffer dump code ( aka screenshot )
  + Generic selection with 'Cursor Select' enabled, uses last event
    mode that has a selection command ( so far only mesh is supported )


 0.2.1-20010726 (Gnome fork):
 [Mongoose]
  + Fixed Mesh select by mouse
  + Group "center" ( Mesh select center ) rendered agian big and red
  + Mesh delete back ( be careful no confirm dialog yet )
    requires freyja_egg 0.8.9-20010727 to work
  + Fixed Mesh selection with '[' ']' keys 
  + Points defaults on
  + Even HLIGHT points obey RENDER_POINTS now ( so you have to set
    RENDER_POINTS to do editing )
  - Obsoleted a few more rendering flags and their use
  + Fix for event_print() calls before widgets are made ( plugins )
  + Made rendering options independent ( may break some things )


 0.2.1-20010725 (Gnome fork):
 [Mongoose]
  + Added a light test back and fixed 'Light' to toggle
  + New bolt-on icon ( bone1 aka bolt-on, using instead of 'Bone' )
  + Gnome app use instead of gtk window finished
  + Getting ready for modular GNOME plugins breaking up code


 0.2.1-20010724 (Gnome fork):
 [Mongoose]
  + Point render color change
  + FAQ update
  - Removed old plugin headers from FreyjaModel
  - Removed Points rendered on 'current polygon'
  + Added 'Texmap' ( generate ) to toolbox1
  + Added 'Point' render toggle
  + Fixed status bar output
  * Started move to Gnome app use instead of gtk window
    ( Mainly to use better toolbox docking )


 0.2.1-20010723 (Gnome fork):
 [Mongoose]
  + New GNOME all dockable toolbar interface ( can tear and swtich any )
  + Uses .freyja/icons/ at all times now
  + Cheesy status msgs ( soon maybe plugin import/export progressbar)
  + "Fix" for shutdown errors
  + Hacked in most events from prototype #1 ( that wasn't that much )
  * Soon to condense into modules and remove glade helper junk funcs
  + Hacked merge of prototype #2 GUI with #1 events
  - Removing SDL prototype from tree ( pruning )
  + Weaving prototype #2 into CVS tree ( yes, magically )


 0.2.1-20010722 (Gnome fork):
 [Mongoose]
  + New glade GUI prototype


 0.2.1-200107212 (Gnome fork):
 [Mongoose]
  + Added keys [ ] to cycle through meshes
  * Hhhmm... mouse mesh select broken because of internal API change
  * Fixed freyja_egg to use a hack to support old group center use
    before it's obsoleted ( fixes mesh old select method )
  + Mesh select menu item


 0.2.1-200107212 (Gnome fork):
 [Mongoose]
  + Automatic texel layout based on vertex XY pos
  + Simple minded texel layout util method based on vertex XY pos '|'
  + Yet another scrolling fix!
  + Scrolling fix for all edit planes ( order matters, heh )
  * New ChangeLog format to show coder
  * Migrated old Freyja FAQ
  * Documentation for freyja_egg moved to that project
  * Documentation and roadmap updates
  * New naming scheme, due to moving away from MVC
    Terms Interface and Backend obsolete Model/View/Control
  + Fixed some emacs mode lines, should have been C++ not C


 0.2.1-20010721 (Gnome fork):
 + Fixed edit windows input hacks ( well, most of the hacks )
 + Fixed edit windows rendering
 + Fixed edit windows axis legend


 0.2.1-20010717 (Gnome fork):
 + File passed by cli/uri support ( for nautilus users mostly )
 + Relative to home path icon loading from ~/.freyja/icons, since
   I can't get fucking gtk pixmap to do anything with abs paths
 + Minor changes to renderer
 + Minor changes to interface


 0.2.1-20010712 (Gnome fork):
 + Perping plugins for new export routines from Egg v8.09
 + Save As... uses EggPlugin::Export now ( calls module's exports )
   This will let you do exports to custom formats or md3 and etc if
   implemented in your libfreyja_egg plugin version for that format
 + 'V' edit mode hotkey back in as hack
 + Only show axis/bones on wireframe rendering


 0.2.1-20010708 (Gnome fork):
 + Fixed scrolling for all planes ( was using wrong scroll events hehe )
 + New scrollbar handling with dummy events for now
 + Fixed rulers init state
 + New grid drawing to match scrolling
 + Middle mouse scrolling


 0.2.1-20010707 (Gnome fork):
 + Scrollbars and ruler widgets added ( not functional yet )
 + New bone rendering test
 + Fixed bad init of render view angle ( caused rotation to load randomly )
 + Changes to new texel editing prototype code

	
 0.2.1-20010706 (Gnome fork):
 + New vertex and outline highlighting to make texture editing more easy
 + Polygon selection to make texture editing more easy


 0.2.1-20010705 (Gnome fork):
 + New libfreyja support: save/load experimental EGGv8.05 format
 + Various fixes to control and renderer


 0.2.1-20010704 (Gnome fork):
 + Fixed per window state
 + Refresh from toolbox events
 + Starts file selection in user's freyja dir now
 + New simple mouse motion rotate in view ( event disabled by default )
 + Fixed File->New event in CONTROL
 + Fixed motion issues with a simple minded lock on the event


 0.2.1-20010703 (Gnome fork):
 + Fixed motion events in Gtk GLArea build
 * Looked at bonobo API  =)
 + New icons made for toolbox
 + Gtk GLArea Key events fixed
 + More option menus for edit plane, render type, and more mode types
 + Freyja event system moving into main class ( trimming some fat )


 0.2.1-20010702 (Gnome fork):
 + Fixed Gtk GLArea modeler mode select rolling menu on toolbox
 + Gtk GLArea refreshes more often now ( new glarea_refresh() )
 + Fixed Gtk GLArea popup menu events


 0.2.1-20010701 (Gnome fork):
 + Event system work for Gtk GLArea build
 + Keyboard support for Gtk GLArea build
 + Moved FreyjaRender Reset() call in constructor to avoid bad
   calls to _model


 0.2.1-20010630 (Gnome fork):
 + Fixed all known Gtk GLArea target segfaults
 * Soon to merge back into main Freyja 0.2.x tree
 + Gtk GLArea target testing builds
 + Changes to interface ( like popup menu tracer )
 + Worked on NOB/NOD plugin
 + Worked on particle backend
 + Fixed texture quad on texture edit
 + Texels show on texture editing now
 + Fixed 2d resizing 'boog' ( 2d editing affecting 3d editing projection )


 0.2.1-20010628 (Gnome fork):
 + Fix some shutdwon issues
 + More event work


 0.2.1-20010627 (Gnome fork):
 + Basic event code in place for testing
 - Removed mtk dependence and extentions  =/
 + GNOME build ( based on glade prototype ) becomes 0.2.1


 0.2.0-20010613:
 + Minor polygon rendering changes for solid and modulated draws
 + Fixed TR animation loading for some versions, broke it for others hehehe
 * Found what seems to be a bug loading too many boneframes in
   libfreyja_loader-tombraider.so
 + atexit use in Freyja
 * TR module loads lara's aniamtions and textures now
   This is make testing OpenRaider easier
 + New skeletal rendering fixes ( removed more OBSOLETE morph framing )
 + Auto animate toggle on key '4'
 + libfreyja_egg texture loading


 0.2.0-20010612:
 + Skeletal modeling rendering tracer
 + Fixed texel duplicator bug
 + Fixed texture loader
 + Fixed modulate use
 

 0.2.0-20010518:
 + Moving to new rendering optimazed backend librender_egg
 + Various tiny fixes
 + New camera code


 0.2.0-20010517:
 + Forked TR loaders into 'old' and 'new'
 + Egg file support now in EggPlugin
 - Removed EggV7 loader from Egg, now in plugin
 * Boneframes are used with 0x1 and 0x2 tags to form animation trees
 * No need to alter vertices and meshes now that tags store transforms
 + Bone tags flags: 0x0 old style tags, 0x1 tree root, 0x2 tree branch
 + New skeletal format


 0.2.0-20010516:
 - Removed all static model plugins ( in libfreyja_egg now )
 - Removed endian utils for model plugins ( in libfreyja_egg now )
 + Reduced some code in FreyjaRender


 0.2.0-20010514:
 + Fixed TR texture loading
 + BBox vertex selection 'U' to enable, mouse to select, 'U' to finish
 + BBox vertex selection rendering
 + Fixed tag rendering
 - Removed all EggV7 code in FreyjaRender
 - Removed all EggV7 code in FreyjaModel, except plugin export code


 0.2.0-20010513:
 + New Makefiles and plugin/lib scripts
 + Model plugin tracers implemented for 3ds and ASE
 + Egg, mtk3d, and EggPlugin forked off into lib


 0.2.0-20010512:
 + New EggPlugin tracer implemented
 + 3ds -> Egg8 import 


 0.2.0-20010511:
 + Work on grid rendering: scroll, size correctly with data, and opt


 0.2.0-20010510:
 + Gnome interface work continues
 + Egg plugin utils
 + New event code
 + New model import/export plugins


 0.1.7-20010507:
 + CVS documentation update
 + RC setup script
 + RC documentation update
 * Back on gnome port tree, plan to merge
 + Uses updated mtk
 + New RC system ( Relocatable binary initialization support )


 0.1.7-20010430:
 + SDL build update, resync


 0.1.7-20010420:
 + Freyja sourceforge module sync
 + Moved bbox rendering to new method
 + Removed the last 'RC' keys and moved them to 'MTK'
 + Fixed bone select by key in control
 + Fixed more texture rendering bugs with V8, FreyjaRender::DrawPolygon


 0.1.7-20010418:
 + Added my cheap 'Map' template (odd data structure)
 + Egg 8.03 model format saving/loading interface candidate 1


 0.1.5-20010416:
 + Fixed EggV8 TR map import
 + Some new rendering code for EggV8
 + New Halflife import for EggV8
 + Basis for EggV8 vertex morph frame render list generation hack,
   I plan do making a special rendering list format and alter
   egg_mesh_t to seperate vertex morph frames apart from groups
 + Md2 and Md3 model import for V8 
 + Undocumented changes to rendering mode control ( not finalized )
 + Merged new Egg8 transforms from my laptop's codebase


 0.1.5-20010415:
 + Finshed transforms for Egg8


 0.1.5-20010414:
 + New render flag controls
 + TombRaider model and map import for V8 
 + Fixed FreyjaModel::AseImport implementation for EggV8
 + Finished current export documentation in Egg8.h
 + FreyjaModel::MdlImport implementation for EggV8
 * Project can now build once agian, quick tests seem to show
   no new bugs and slight performance increase in both backends
 + New hack for FreyjaRender to continue using old render code for now


 0.1.5-20010411:
 * Heavly reduced EggV8/EggV7 ifdefs in Model using Cached*() methods
 * Minor changes to freyja.mtk
 + New edit_mode enum in control for readibility
 - Moving more code out of Control into Model
 + New model type enum, to help with porting to python later


 0.1.5-20010409:
 * Minor changes to EggV7 to reduce minor symbol diff with V8
   causing lots of extra code
 * Control data model building code moving into Model
 * Finishing out Model's new design to be the only source of once
   duplicated data
 + Replacing egg calls with Model calls in Control ( opt and abstract )
 - Removing EggV7 code from Control and using EggV8 as guide to 
   interface into Model


 0.1.5-20010407:
 * Moving copy/cut/paste into event commands
 * Reorganizing 'Model - note this won't build until I finish
   'Control, 'Model, 'Render and maybe the Eggv8 API ( V7 must go soon )
 + FreyjaModel using flags now to replace various lame get/set methods
 - Moved some methods into utils.cpp instead of leaving in limbo mixed in
   with object code
 + Moving the horrible duplication and use of Egg in MVC to FreyjaModel
   from the 'Control and 'Render to force abstraction
 * Back from working on netcode for ftp/http/gnutella servs|clients  =)


 0.1.5-20010226:
 + Fixed segfault on Rendering null meshes in Egg8
 + Texel editing in Egg8 starts
 + "Smart" reference counters for vertices and texels in Egg8
 + New texel|vertex merging/spliting experimental code starts for Egg8
   ( for seamless textures and inter-mesh polygons mostly ) 
 + Moved texel edit debugging from DEBUG to DEBUG_TEXEL define
 + Fixed not allowing selection when current mesh|frame is null
 + Found some bugs in MtkImage that cause segfaults (libmtk bug)
 + Fixed Transform segfault in Egg7


 0.1.5-20010210:
 + Fixed fullscreen editing mode
 + Fixed various bugs caused by unsynced dupilcated code
 - Moved some code out that should have been replaced by mtk
 - Removed code from FreyjaRender that was dupilcated from MtkRender!


 0.1.5-20010208:
 + Started using new mtk dialog system ( soon mtk script support )


 0.1.5-20010205:
 + Egg8 rendering fixes in Render
 + New Egg7 loading in Egg8 ( experimental )
 + New Makefile rules to seperate builds via dir
 + Changes and fixes to freyja script files
 - Removed more hardcoded keys from control, 90% scripted now
 + Fixed (018) YZ edit plane now works correctly during mesh moves
 + New command to force colorquad on texture edit
 - Removed more obsolete code from Control and Render
 - Removed unneeded string buffer from Render ( 128 bytes were wasted )
 + Fixed (017) texture edit bug where it wouldn't render colorquad with mtk_gl


 0.1.5-20010203:
 * Soon make Model a child of Egg, so I can section off and build up
   util methods for Egg
 + Minor changes to Egg7 Control
 + Basic editing for Egg8
 + ASE Import for Egg8
 * I think the codebase for the Egg7 backend hasn't been affected
   by adding Egg8, but I would expect some bugs to crop up from
   merging the codebases ( WARNING )
 * Egg8 composite now compiles in GooseEgg, it's *very unstable and
   lacks many features of Egg7 at this time, please don't expect it
   to be "safe" -- you can build the old GooseEgg from this source
   for a reason  ;)
 + Finished up initial Egg8 support in Model
 + Start of new control interface with bbox selection and cleaner code
 + Finished up initial Egg8 support in Control
 * Requests for localized freyja.mtk files


 0.1.5-20010131:
 + Finished up initial EggV8 support in Render
 + Work on adding EggV8 support to Control, Render, and Model starts
 * This now means, for the first time, that a branch of GooseEgg contains
   2 backends.  I have decided to develop the new backend while
   maintianing the old stable backend in the same branch.
 + New rule (make debug8) for building EggV8 build (GooseEgg-8)
 + Mostly merged the older prototype code that will be kept, removed
   the rest
 + EggV8 work starts

	
 0.1.5-20010130:
 + Fixed lib3ds load bug ( typo caused it to not build )
 + FTX load support ( by mtk_gl )
 + Added ftx tool to convert them to RGBA tga and RGB ppm


 0.1.5-20010129:
 - Removed forced './data/prefabs' directory on prefab save
 + Mesh transforms now agian use mesh center as system origin


 0.1.5-20010128:
 * Finished 0.1.5 inital branch for GooseEgg using new libmtk_gl
 * Release of mtk_gl 0.0.1 to public
 * Release of 0.1.4 final


 0.1.4-20010121:
 * Reordering the source trees for optimial sharing of common
   resources of Freyja and GooseEgg and also avoid duplication
 = Splitting the plug-ins from the source tree
 + New hacked Makefiles to use the new libmtk_gl
 + New configure --info
 * mtk_gl will now be a seperate project and source tree ( this will help
   make Freyja and GooseEgg trees consistant from now on, as well as
   force mtk to mature faster )


 0.1.4-20010120:
 = Split mtk from GooseEgg
 * Had something come up - 0.1.4 final delayed
 * Decided to release this as final, before I start a rewrite on some
   major componets ( making it untested )


 0.1.4-20010119:
 * Left class 'Texture' whole in src/mtk for now
   ( until I have the MtkImage and true MtkTexture working )
 * Started dividing the project into  mtk library and GooseEgg
   modeler codebases, when 0.1.5 is released they will be 
   seperate projects
 * New shorter/prettier/more informitive ChangeLog header
 + Merged old plugin image source with mtk codebase
 - Removed image plug-ins from src/plugins
 = Split old Texture class into MtkImage and MtkTexture
 + Merged old tmp source with mtk codebase
 - Removed src/tmp and moved those source files to mtk


 0.1.4-20010117:
 + Replaced hardcoded keys with script file keys and events
 - Removed some old test code in Control
 + Mesh select by mesh center ( dark red dots, for newbies )
 + Moved ldd info script for system.info into configure


 0.1.4-20010110:
 + New tool build rules
 + Added some base code for alice to model tool
 * Worked on Alice RE
 + Replaced GHB tool with more generic 'model' tool
 * Worked on SoF RE
 + Fixed Texture's M32 loader after cleaning up GHOUL tools  =)
 + Adding old GHOUL tools to CVS


 0.1.4-20010108:
 + Fixed egg Transform for mesh bbox code
 + Fixed some parts of MDL export
 * Note MatchColor can 'wash' image to black if repeatedly passed
   same image
 + Fixed Texture's color match which fixed a few dependent bugs


 0.1.4-20010107:
 * Recovered the GHOUL RE programs I wrote and deleted  =)
 * New TODO format and changes like a clear roadmap
 + Python prototyping starts in 0.1.4 ( not in CVS still )
 * Recommited 20010106 ( failed last night )


 0.1.4-20010106:
 + Changed SDL key code for modifier keys ( doh typos )
 * Plans for making mtk's own texture/quad text support
 + Temporary fix for SDL build - using GLUT text functions now  ;) 
 - SDL_ttf removed!  OUT OUT!
 + Backport of python plugin code from Freyja branch


 0.1.4-20010105:
 + XZ edit plane is no longer inversed ( confusing to everyone )
 + Fixed SDL_ttf crash on filedialog ( but still no text support )
 + Worked on MDL export some
 + Model save dir no longer forced/reset to './data/models/egg'
 + Testing code and changes to Mdl
 * BUGS changes and update
 * TODO update
 + mtkPrint agian dumps to console


 0.1.4-20010104:
 + SDL_ttf garbage - I hate SDL  =p


 0.1.4-20010103:
 + SDL port finished ( only needs text support now )
 + SDL builds in Makefile
 + SDL port mostly finished ( based on Ryan's old audit code )


 0.1.4-20010102:
 + Fixed mtk script menus for polygon/point
 * Seems it's the Texture class that doesn't support 
   full alpha correctly!
 + Fixed PNG loader alpha support
 + Fixed PNG loader ( no alpha support )


 0.1.4-20010101:
 * Spec for Eggv8 001


 0.1.4-001229:
 + Right click root menu in freyja ( Opens menu 0 in freyja.mtk )
 = Split README into README and FAQ 
 + Documentation update for 0.1.4


 0.1.4-001227:
 * 3d editing doesn't work in fullsreen mode yet
 + Set fullscreen mode from RC file
 + Set initial window size from RC file


 0.1.4-001222:
 + Changed TR gamma correction
 + New Ase::Save  (doh forgot, btw this is very broken)
 + Md3 import testing, minor bug fixes
 + Freyja configure script to replace old gegg one
 + Fix for directory optimization  =)
 * Now I have X 3.3.6 and utah back ( I have both Xs now )


 0.1.4-001221:
 + Optimizations for directory bulding
 + Removed more FreyjaControl hardcoded key comands and replaced
   them with mtk scripted key events


 0.1.4-001220:  (day)
 + Release 0.1.4
 * Worldmap md3 and egg are the only 'stable' export types
 + New type saving by extention in filename check ( neat huh? )
 + Moved menus to grab mouse over buttons
 + Moving some old kb support out, replaced with mtk script
 + File type menu on FileDialog started
 + Fixed FileDialog Slider mouse motion
 * Release
 + Fixed Slider rendering


 0.1.3-001220:  (early morning)
 * Updated TODO ( from Freyja )
 - Removed gegg rc debug output
 - Removed mtk script debug output
 + Reversed MtkSlider's use of scroll buttons - to make more sense
 - Removed MtkControl's buffering data members ( freed some mem )
 + Some fixes in FileDialog save functionality
 + New FileDialog Save support!
 + New textbox prototype built into FileDialog
 + Motion support for FileDialog
 + New FileDialog - uses scrolly mouse only atm
 - Removed old GLUT menu callbacks
 - Removed unsafe Info() call during MtkRender construction
 + Fixed unsynced CVS commit


 0.1.3-001218:
 + Fixed bug in mtk file
 + New mtk file
 + Cleaned up menuing a little
 + Menus and menubar hack replace GLUT menu
 - GLUT menu removed
 + New MTK widgets


 0.1.1-001216:
 + New hw, new X server, lots of bitching and ear pulling on
   debian-x team, in short I can do GL code agian


 0.1.1-001209:
 + Egg V7C implementation updated to use devel data structures


 0.1.1-001206:
 + Added save functionality back - heh


 0.1.1-001205:
 * EggV7 still using old linked lists, planning on
   keeping gegg V7 and moving it to mtk List - V8 support
   will stay in unstable ( freyja )
 * Didn't get all the key shortcuts into the new freyja.mtk 
   script file
 + Fixed mtk kb I/O error
 - Removed frame skipping
 + New mtk ( backport from freyja )
 + More backports from the development version


 0.1.0-001106:
 + Release 0.1.0
 + Document update
 + More slider animation fixes
 + Slider hortz fixes for animation and new mouse/draw
 + Fixed up gui a little more in new RC
 + Fixed editing scrolling - works for all planes now


 0.1.0pre5-001106:
 + Fixed bad poly add event in mouse
 + Changes to mouse control to prevent missed events
 + New ScreenToWorld that handles scrolling, but
   be aware that scroll adjusts all planes using the same
   scroll state atm
 + Buttons and sliders are now inactive when not visible
 + Changed bbox draw policy
 + More slider chnages: slight more NeXTish and no extra trough
 + If you like the old slider look add define OLD_SLIDER_LOOK
   for your buildin the Makefile


 0.1.0pre5-001105:
 + New slider look
 + Fixed Slider aniamtion and non scroll button input
 + Fixed Slider mouse focus bug
 + Doc updates
 + New make test rule to seperate stable/experimental code
 + Make script changes to disable lib3ds support
   './configure.sh --no-3ds'
 + Egg transition precompiler hack to allow v7 and v8  =)
 + Stubbed out unimplemented functions in Eggv8
 * Vertex addition and etc is now context dependent, I
   hope this will speed up things by letting the backend
   do more of the work

	
 0.1.0pre4-001104:
 + Egg v8.00 - complete rewrite ( argh )
 - Removed Eggv7 mem management
 + Rewrote List, wth was in that file?   =)
 + bbox fix on bone rotation
 + New render window now has bones
 + Colored axis
 + Many documention updates to README and FAQ

	
 0.1.0pre4-001103:
 - Removed egg v7 bone frame loader from model's TR loader, so
   I can start egg v8 testing with it soon
 + TombRaider 3 mesh/bone loading fixes
 + TombRaider mesh loading fixes
 + TombRaider bone loading fixes
 + New EXPERIMENTAL lib3ds support
 + Added texfind make rule ( use it often enough )
 * Ripped out some UT textures with texturefind tool
 + Release
	
	
 0.1.0pre3-001102:
 + Documentation and make script fixes
 + Slider state var passing now optional
 + Scriptable sliders, and new freyja.rc
 - Removed slider test from main
 * NOTE: Some main.cpp should be moved to mtk.cpp now,
         also the test code is ready to move out too
 + Fixed make scripts
 * NOTE: Now only mtk support functions and main have 
         to be ported to SDL, yay!  Still requires OpenGL 1.2!
 - Removed GLUT from view
 + EGGV8_TEST define to start moving EGGv8 in CVS slowly
 + Tinkering around with mtk more - please test
 * Started looking into moving to MTK from GLUT/SDL
   ( MTK is becoming a higher level than they are )
 + Removed GLUT from control
 * Testing EggV8 EXP
 + Fixed code using id tree in various modules
 * ID Tree seems stable now, time to move to adding opt
   like _auto rebalancing_ and convence methods
 + More chnages and fixes for ID Tree


 0.1.0pre3-001101:
 + Fixes for id tree usage
 + Finally started Eggv8 rollover ( argh delays! )
 + Much needed fixes to ID tree
 + Minor changes to png/jpeg
 + UT model work

	
 0.1.0pre3-001031: ( Halloween Ed )
 + Default non visible FileDialog
 + Some minor refinement to button labels

	
 0.1.0pre3-001030:
 + Minor tweaks to control
 + Fixed new FileDialog, it's semi-working with mouse only now
 * Ah, ID Tree needs a lot of work still
 + Broke the new file dialog as it's unusable - oh goodie
 + New mtk FileDialog prototype to replace old prototype
 + Minor fixes for texture selection and event_shutdown
 + You can toggle bbox off in edit too now
 + New faster and more accurate grid code
 + New rendering and control code for scroll (no scrolling yet)
 + New mtk3d interface

	
 0.1.0pre3-001028:
 + gcc '2.96' fixes
 + Makefile script update
 * Working on Eggv8 still, don't know when it'll replace Eggv7,
   as I'm figuring out optimizations for the backend
 + Stopped working on assoc trees - working on 'index tree'
   which I used to demo the dock script (I only used int key type)
 + Fixes to FileWidget prototype ( maybe time to ditch it )
 + Clean up docks in FreyjaControl
 + New dock layout in freyja.rc


 0.1.0pre2-001027:
 * Note that the script parser was written at 0200-0300
 + New freyja.rc scriptable buttons work now
 + More configure testing
 + Texture fix for gcc 2.91.x, thanks zakk for report
 + Fixed CVS midding png.cpp file, thanks zakk for report
 + Egg v8 work
 + mtk STL work continues ( will cause a dep on stdc++ )

	
 0.1.0pre2-001026:
 + mtk STL work
 + Sliders work with regular mouse buttons now too
 + Moved GLUT dep to Widget
 + New test code layout - expands on segfault fix
 + New mouse event code, consumes mouse event
 + Fix for avoiding static class alloc (seems to be segfault cause)
 + Md3 export working for mapobjects w/o boneframes? 
 + Md3 export is now EXPERIMENTAL ( F8 )
 + F8 new md3 export test key
 + Fixed JPEG loading color bug

	
 0.1.0pre2-001025:
 + Egg boneframe type from bone and aniamtion exp
 + Renamed some egg structs to be clearer
 + More SDL auditing, note all the #error pc's  =)
 + zlib configure.sh --test-lib check
 + Fixed camera mode
 + Disabled Md3Import tags
 + JPEG support reenabled
 + Make scripts modified to attempt making a module that uses
   a library to see if the library is configured properly

	
 0.1.0pre2-001024:
 + FreyjaModel::Md3Export is partially done - dumps blank
   md3s for now - but has skeleton code for egg->md3 (F11)
 + Md3 can now be used to create md3s
 + Md3::Save seems to be done
 + Slight change in Md3 test code
 + New halflife test code
 + New Md2 test code
 + New EXPERIMENTAL PNG loader, note libpng isn't even C++ safe
   to begin with
 + Halflife loading is still experimental - but it's much better
 + Halflife texture loading and dumping

	
 0.1.0pre2-001023:
 + Tool to RE texture pos from model formats
 + HL texel loading fixes in HalfLife
 + Edit at any window size with new screentoworld scale hack! yay!
	
	
 0.1.0pre1-001022:
 + Plane switch is back ( kind of ) F4
 + Md3 loading changes in FreyjaModel
 + HL loading changes in FreyjaModel
 + Texture edit fixes in FreyjaRender

	
 0.1.0pre1-001021:
 + More widget testing - about ready to add WidgetControl
 + Slider improvements ( still only works with scroll button )
 + Event cmds are used in menu

	
 0.1.0pre1-001020:
 + New slider prototype
 + New button test code
 + Zoom In/Out with scroll mouse
 + New widget testing entry points
 + Frame skipping changes

	
 0.1.0pre1-001019: ( GLUT | SDL )
 + Experimenal mtk widget/button code testing
 + New FPS counter code
 + Added some frame skipping code
 + BUGS seperate from TODO
 + Back on mtk widgets
 + Start of SDL port, based on example SDL code and Ryan's auditing
 + Camera 'speed shift'  <shift> + up|down arrow controls speed
 + Egg bbox transforms fix
 + Changes to TombRaider loading
	
	
 0.1.0pre1-001018: ( last GLUT release )
 + Doygen file commited
 + Fixed widget file dialog prototype
 + Clamped texel selection to (0.0, 0.0) to (1.0, 1.0)
 + ScreenToWorld scaling hack to account for bad rendering scale
   to disable it comment out #define RENDER_SCALE_HACK in 
   method ScreenToWorld in FreujaRender.cpp
 + New initial camera postion
 * Final alpha is upon us...  run in fear...

	
 0.0.37-001017: ( last GLUT release? )
 + Started 'camera edit' mode code
 + Fixed grid bug which was also a matrix stack bug
 + Taniwha added .cvsignore
 + Fixed CVS - thanks taniwa for checking
 + New frame generation code for mesh and scene
 + New control support for animation frames starts
 + New internal Egg Animation frame save/load, XML on hold
 * New kitty example model with bones
 + More bone fixes in view and control modules
 + Added bone select back in control
 + Del bone in gui back in control
 + New Bone allocation method in Egg
 + Fixed Egg mesh removal from bone crash
 + New developer profiles for template generator
 + Changes to template.sh and dos2unix.sh
 + New freyja_event, so now you can call for events anywhere
 + Fixed prototype Widget mouse
 + Widget prototyping: Wrote GlButton and started mtk
 * Decided widgets are ore needed, they are!  =)
 * Looked over SoF SDK and unreal model spec agian

	
 0.0.37-001016: ( last GLUT release? )
 + ASE FreyjaModel export, Ase::Save is only stub though
 + Interface changes to Egg, some clean up
 * Documented more Egg, it feels like it needs division
   into smaller classes in the future

	
 0.0.37-001015: ( last GLUT release? )
 + FreyjaRender dumps GL driver info 
 * Fixed CVS/Entries error on local mirror agian
 * Recoded for the lost laptop code and docs
 + ASE loader

	
 0.0.37-001014: ( last GLUT release? )
 + New no longer saves empty frames - now you must have frames
   perhaps I'll move markers out from mesh, so save is independent
 + Added redirect saving back in for models and prefabs in control
 + New Egg model type
 + New forcing enum on Egg transform types 
 + New Egg bounding box full reclac method
 + New Egg debug|error output changes
 + New Egg test code
	
	
 0.0.37-001013: ( last GLUT release? )
 + Added my kitty model I made while testing  =)
 + Usability testing, tested modeling w/o bones
 + Changes to FPS: better acuaracy

	
 0.0.37-001012:  ( last GLUT release? )
 + FPS display toggle press 'f'
 + Fixed MDL MAX values
 + Fixed texture crash bug
 + Fixed texture editing bug, it now works in 400x400
 + New mode keys to match the README, heh
 + Fixed bad control from palette toggle

	
 0.0.37-001011: ( last GLUT release? )
 + NT testing with MSVC++ 6.0
 + TODO|BUG audit
 + Fixed Texture editing mode rendering

	
 0.0.37-001010:  ( last GLUT release? )
 + Fixed Texture crash bug?  caused by calling Clear() often
 + Fixed filedialog/map mode incorrect interaction
 + Backport of mtk Image buffering to Texture
 + New bug auditing policy, known bugs kept in TODO
 + Antialiasing option
 + Fixed grid drawing in control
 + Fixed rare Egg file I/O error
 + Error reporting back in control file I/O
 + New model edit rendering
 + Clear model call also resets frames in control
 + New view does texture and poly edge scaling in edit model mode
 + More MVC clean up, and removing more interdepence
	
	
 0.0.37-001009:
 + New scaling for with lineloop polygon rendering, looks better
 + Minor changes to view and control
 + New controls for rendering and program modes

	
 0.0.37-001008:
 + Ported some of the GPLed qutils 

	
 0.0.37-001007:
 + New font fix
 + Text input is back in control now, so save works agian
 * Lookout for new bugs produced by rewriting so much code at once
 + Most FreyjaControl layout rewritten
 + Major MVC design changes, removed gobals that aren't C++ stubs
 * MVC policy change ( see TODO )
 + Fixed texture select bug
 + JPEG support reenabled for Q3
 + EGG mesh v7C support, please convert your files soon!
 + EGG mesh v7D
 - Removed EGG v6, Egg v7B double, and mesh v7B support
 + Egg mesh, frame, vbuffer, and documentation changes
   I moved more data from the mesh into the frames, so
   I could have more flexability with scaling and animation
 + Md3 work continues

	
 0.0.35-001006:
 + Md3 work
 + Quake Map loading prototype ( test with F10 )
 + Fixes in configure.sh
 + New 'make backup' script

	
 0.0.35-001005:
 * Got test Quake .MAP donated by LordHavoc
 + New map view projection
 + Screenshot code now avoids overwriting other screenshots
 + Added utah font hack back
 + Brightened pallette for TR textures
 + Removed utah font hack
 + Screenshot code has counting filenames

	
 0.0.35-001003:
 + Map camera movement is back in the codebase, as a quick hack
 * Tinkering with texture editing

	
 0.0.35-001002:
 + Ah!  Fixed the remianing issues, all init value problems  =)
 * Noticed if you disable panel (F9) edit mode grid stays
   correct, the bug may be in ortho switch
 + Fixed default point/line size in FreyjaRender ( duh )

	
 0.0.35-001001:
 + MSVC++ port merged with codebase
	
	
 0.0.35-000930:
 + MSVC++ port finished

	
 0.0.35-000929:
 + This is being commited by the newly resynced codebase, wweee
 + Fixed huge error in the SF CVS mirror!  thanks taniwha
 + Fixed bad widgets with texture rendering enabled 
 + Sectioned off gl error reporting to debug build
 + Commited correct FreyjaRender

	
 0.0.35-000928:
 + Added gl error checking - isolating the utah problem
 + Added map view back
 + Removed divide by zero in FreyjaRender::Display
 + Fixed bad link command in prof build
 * WARNING known problems with 3.3.6 and utah MGA
 + Color quad for doing texture editing w/o texture
 + Camera support ported
 + New grid drawing size adj
 + Abracted Model from Control some more
 + Fixed passing of Texture->_image to Mdl in FreyjaModel::MdlExport
 * Found error - stop passing Texture->_image buffer outside of class!
 + Added FreyjaModel::MdlExport warnings and errors
 + Fixed kb texture load bug
 + Cleaned up bbox drawing when textured
 + Fixed FreyjaRender::DrawMesh to do Update before drawing bbox
 + Fixed RC loading null buffer
 + Added some code to FreyjaRender based on Widget prototyping
 + Working on utah-glx support for layering

	
 0.0.35-000927:
 * late for class, thank you debian X maint for wasting yesterday =p
 + Fixed new file dialog mouse usage ( except for .. )
 + Fixed crash on null mesh in FreyjaControl ( agian, cvs foo )

	
 0.0.35-000925:
 + Working on new widgets and event system

	
 0.0.33-000923:
 + Screen shot code - bound to <alt>s
 + A fake 'corner' widget added for testing with 3d object rendering
 + Widget and button in now 2d ortho and gl coor, instead of ggi 
 + Support for modifer keys
 + Changing widget file dialog prototype into general widget class
 * Finally got more time to work on Freyja code

	
 0.0.33-000919:
 * Planning on using 2d plane for controls now
    trying to avoid redraws
 + Fixed ScreenToWorld, I was using the wrong 0, 0  =)
 + Hack to fix texture editing

	
 0.0.33-000918:
 + FreyjaControl clean-up starts
 + Moving hacks into module methods ( continues )
	
	
 0.0.33-000917:
 + Moving hacks into module methods
 + Runs agian ( with hacks )
 + Compiles agian
 * Excpet loss of stability, until the new modules are hack free
 + Finished pulling project into MVC like modules
	
	
 0.0.33-000916:
 + New system.info captures ldd info
 + Abstraction of backend from interface, oh boy
 + RENDER_COMBINE flag allows flag combining with current
   render mode flags ( like ORing with current flags )
	
	
 0.0.33-000915:
 + Divided control of transforms
 + User defined transform keys
 + Optimization|Bugfix for Egg transform functions
 + Widget design #0 implementation starts

	
 0.0.33-000914:
 + Fixed reshape clone problem (callback wrong) in FreyjaRender
 + Moved world|screen coor conversion into FreyjaRender
 + Removed hardcoded world|screen coor use in main
 + Fixed bounding box distortion on transforms
 + Stripped even more GOBALs controls
 + Removed main dep on Button prototype
 + Abstracted use of Widget prototype class in main
 + New 'sidebar' widget mock ups for GUI design documentation

	
 0.0.33-000913:
 + FreyjaRender is now full tracer class
 + Widget prototype is about done
 + Removed direct control dependence on dirent
 + Fooed with bbox a little
 + Removed a little more control from main.cpp GOBALs
	
	
 0.0.33-000910:
 + Fixed bad DATA_PATH bug, so it can default to current dir 
 + Configure changes
 + Removing all prototype code, filling with freyja modules
 + Rolling more of the GooseEgg code into Freyja class structure
	
	
 0.0.33-000909:
 + Fixed Egg frame boundingbox init bug
 + Fixed Widget hack to work with FreyjaRender
 + Started Adding control interface to FreyjaRender
 + Removed GLUI
 + Stripping GooseEgg modules for use in this project
 + GooseEgg will remain seperate in the SF CVS for now
   my plan is to leave GooseEgg alone then, replace it
   with Freyja BETA 1 after fall session is over
 + Freyja coding starts
 * The Freyja project is taking the GooseEgg project
   and making it into a more focused endevor for mapping
   and modeling for the 3 engines of Quake, TombRaider, and UT.

   I'm taking this project and pushing it as my senior project.
   I hope this pleases you guys knowing that now it's going to 
   be more than my hobby and get more of my time.  

   Look for BETA 1 release this fall.
	

  GooseEgg
 ----------------------------------------------------------------
	
 0.0.31-000824:
 * Prototyping is being repackaged into M.V.C. form

	
 0.0.31-000819:
 + Egg and GUI support for frame bboxes
 + New egg_frame bounding boxes ( need them now, so added )
 + Broke Texture indexed image generator 
    ( stupid non-working alogrithm, but it's 30x faster )
 + Mdl minor fixes
 + GUI resets ZOOM and SCROLL on rc reload now ( hint hint ) 
 + New Texture can generate indexed images from RGB 
    ( vector based, too slow )
 + Finished EXPERIMENTAL MDL export hack ( eww, '@' activates )
 
	
 0.0.31-000818:
 + MDL export
 + Fixes to Vertex deletion to handle polygon removal better

	
 0.0.31-000817:
 + Minor GUI changes for look and usage, just experimenting for now
 + Clearer command names for mesh menu Cut/Paste -> Split/Merge
 + PartialMeshCopy now copies and vertex frames too
 + PartialMeshCut strips unused vertices automatically now
	
	
 0.0.31-000815:
 + More mesh editing interface
    mirror hack, cut/copy/paste
 + More mesh editing methods in Egg
    mirror hack, cut/copy/paste
 + Retooling Egg agian, so look for new bugs ( sigh )
	
	
 0.0.31-000814:
 * Oops! CopyPartialMesh was being used with AddMesh in Egg
    This is bad, since CopyPartialMesh calls AddMesh too
 + Finished Egg v6 loading and conversion to Egg v7
 + Fix for Texture::LoadTGA error handling
 + Fix for read_rc comments
 + Meshes now use 'EGG m7C' and EGG stays 'EGG v7B'
 + Fixed EGG v7B load error
 * swab for endian a good idea?
 + Make dumps a system.info for bug reporters now   =)
 + More Makefile magik
 + Load handles Egg V7B that used double unit_t format
 + unit_t is now float and all code has switched to it
 + ROE implementation starts ( and may merge with EGG file format )

	
 0.0.31-000808:
 + Profiling build ( blah )
 + Less redundant console output
 + Win32 port combined with CVS
	

 0.0.31-000805:
 + WIN32 port: note TR animation is disabled

	
 0.0.31-000803:
 + Better MD3 error handling

	
 0.0.31-000802:
 + Some new Md3 error handling
 + Md3 frame support, heh - must had forgot to add it
 + New add vertex forced sync in frames
 + Fixed vertex deletion using a forced sync in frames
 + New caching mesh|bone for Egg::Find(Mesh|Bone)
 + New point and click bone usage in gui
 + More minor gui tweaks
 + New mesh center move in gui
 + New bone|vertex nearest functions in Egg

	
 0.0.31-000731:
 + Small clean up in renderer to remove extra draws (oops)

	
 0.0.31-000730:
 + Update view on vertex delete
 + Export frame as mesh in gui
 + README updated
	
	
 0.0.31-000729:
 + Report save errors to user in gui
 + Build ids now used to seperate versions beyond minors ( CVS )
 + Converted old animation code hack - time to write real version 
 + New frame sorting
 + Fixed Egg::BoneDisconnect
 + Menuing changes
 + Few tweaks to Texture
 + Texture has generic Load() like Model now

	
 0.0.31-000728:
 + New mouse open for textures and meshes as well as models 
 + Fixed MDL and MD2 Load error codes
 + More work on interface
 + Started GLUI v2.0 beta port
 + More RC vars
 + New RC comment format: # to end of line 
 + Removed some obsolete gobals

	
 0.0.31-000727:
 + RC file 
 + Custom colors
 + New edit rendering code
 + Added more GUI elements
 * Corrected ChangeLog 0.0.31 entry ( was listed as 0.0.29 )

	
 0.0.31-000724:
 + Fixed File I/O ordering, so model loading/saving is in order
 + Mesh and Bone sorting
 + Replaced egg_lights with egg_markers
   markers are used as metadata for entity lists in maps
   or special features like lights or GHOUL light emission points 
 + Shifting to EGG v8 spec - learned all I wanted in EGG v7 

	
 0.0.31-000723:
 + New bone file I/O
 + New Bone highlighting in GUI ( helps editing )
 + Fixed Bone code
 + Commented out some of the old exp debug in HL/Model,HL
 + New mouse use in linux file Open dialog hack ( select/load )
 + New multi transform mode in gui ( mesh/frame/scene )
 + New full scene transform, good lord!   =)
 + Fixed Egg::Load, cleaned pointer that could cause bad poly lists

	
 0.0.31-000722:
 + A few changes to gui and rendering
 + Removed some redundency and added abstraction to main
 + HalfLife loader added to gegg codebase ( hack at present )
 + New Model::Load and some native format consversion addtions
	
	
 0.0.29-000717:
 * Found out drawing grid slows down gegg most, 
   I need opt with quads pretty soon  =/
 + Everything should be usable agian before GLUI side step
 + Merged the edit and rendering windows together into new GLUI UI
 + GLUI interface starts

	
 0.0.29-000716:
 + More bone code

	
 0.0.29-000715:
 + Model's TR loader now constructs EGG v7 bones ( w/o linking )
 + Rewrote EGG v6 bone hacks in UI and Egg for EGG v7 
   ( will be rewritten agian to use special Egg methods soon )
 + New Egg Bone code for EGG v7 backend
 + New Egg::FrameToMesh
 * This gurantees a full rewrite of code for these features
 - Removing more features from GUI, so I can move to GLUI with
   cleaner design ( removing some hacks ) 

	
 0.0.29-000713:
 * Need to cache Mesh transforms to apply less often for speed
 + Rotation ({}|[]\) now calls the new mesh rotation
   ( per frame rotation will be added back in the gui later )
 + Scaling (+-) now calls the new mesh scaling 
   ( per frame scaling will be added back in the gui later )
 + New Egg::MeshRotate ( affects all vertex frames )
 + New Egg::MeshScale ( affects all vertex frames )
 + New Egg::MeshTranslate ( affects all vertex frames )
 + Fix for VertexList build - no duplicates
 + GUI support for SplitMesh
 + Fixes for Egg::SplitMesh

	
 0.0.29-000712:
 + New Egg::SplitMesh ( Trying to get former power of groups back )

	
 0.0.29-000711:
 + Made a glui source tree for gegg 
   ( so I can be sure it builds on linux )

	
 0.0.29-000708:
 * Please note the new EGG MESH v7.1 has new poly list 
   type bound to egg_mesh_t; older EGG v7 isn't frame compatable!
 + Fixes for new framing algorithm
 - Removed File Open pause for kb
 + Optimizations for Model import
 + Rewrite for renderer, model import, etc for new EGG v7
 + New EGGv7 format without explict 'polygon frames' (minor rewrite)

	
 0.0.29-000707: 
 + Tmp fixes for Egg::DelFrame
    ( I'm about to rewrite the frame code, so this is very tmp )
	
	
 0.0.29-000706:
 + New Widget class usage
 + New Widget class 
 * Looking over EGG v7 - removing 'polygon frames':
    1. It's better design to force the creation of a new mesh,
       than have what are in effect 'meshes in meshes'
    2. The polygon list per frame will be removed
 - Removed mddc 

	
 0.0.29-000705:
 + README updated a little
 + More GUI support for EGG v7
 + Md3, Md2, Mdl, EGGv6, and TR support now EGG v7

	
 0.0.29-000704:
 + More file I/O updates

	
 0.0.29-000703:
 + New file I/O started
 + Half working build of EGG v7!
 + Sectioned off all old Egg usage with def FIXME
 * EGG v7 rollover continues

	
 0.0.29-000702:
 + New render code
 + New Egg class
 - Removed EGG groups

	
 0.0.29-000701:
 + New prefab format ( EGG v7 )
 - Removed old EGG backend ( hack hack, die old format! )
 + New EGG class layout
	
	
 0.0.29-000630:
 + New EGG v7 backend rollover starts
 + Release

	
 0.0.29-000628:
 + Single edit window testing
      ( renable 3 win by commenting out main.cpp L2684 ) 
 + Hello kitty| guano demo ( really cute )
 - Removed POV dump in EGG
 + Egg v7 prototype 3 looks good - time to start on new backend

	
 0.0.29-000627:
 + Fix for software GL
 + Add redraw for edit windows ( software users need to disable )
 * Reviewing EGG v7 specs ( man, this is getting delayed )

	
 0.0.29-000624:
 * Wrote SoF spec from last night's notes

	
 0.0.29-000623:
 * RE a lot of SoF, and it was fun
 + M32 texture fixes
 * Finally got some good CVS Mesa/Utah-GLX builds to test on

	
 0.0.29-000622:
 + EGG v7 work continues
 * Terrian engine proposal to QF
	
	
 0.0.29-000621:
 + EGG v7 DS ( get too sick to implement )

	
 0.0.29-000617:
 * QF std Mesh prototype discussion

	
 0.0.29-000616:
 * QF std Mesh prototype discussion

	
 0.0.29-000614:
 * Fixed calls to new Texture palette interface
 + Texture palette seperation removed, replaced with modes
 + New load JPEG Texture support, and configure.sh support (EXP)
 + New save TGA Texture
 + New load M32 Texture support (EXP)
	
	
 0.0.29-000611: 
 * configure.sh now can do slighty more things 
	
	
 0.0.29-000610:
 + Configure like thingy ( script ) for lazy folks
 + Fixed X crash with Utah-GLX with Window class
 + New GUI init/shutdown, so I can use my new G200 and Utah GLX  =)
 + Got X repaired enough to start back coding
	
	
 0.0.27-000605:
 + New MD2, Mdl mesh loading into groups
 + Fixed some docs
 + New MD2 skin autoloading ( Requires matching q2 dir tree )
	

 0.0.27-000604:
 + Found werid thing about MD3 skin name starting with '\0'
   when that happens replacing with 'm' seems to be right
 + New image flipping code to correct MD3 TGAs I tested with
   frist byte = 0x0
 + Fixed Model::TR colored polygon loading
 + Fixed colored polygon drawing|palette reading bugs
 * Working on Texture mapping issues...
 + New TGA support in Texture
 + New RBGA support in Texture
 + New directory selection in file dialog prototype
	
	
 0.0.27-000603:
 + New Md3 support   
 + Fixed TR4 support 

	
 0.0.27-000602:
 + New bounding boxes per group
 + New animation lists stored in groups	
 + Worked on TR4 loading
 + New egg_animation_t
 + TR3 loading fixes
 + Fixed some more TR loading issues
 * Zoom and scroll aren't setup for editing yet!
 + New scrolling on grid and view
 + More backend clean up
 + New zooming

	
 0.0.27-000601:
 + TR animation pivots load correctly
 * New gui layout planning will be impelmented soon
 + Model class prototype started to help force new layout
 * Breaking up prototypes and some experimental code into modules
   to isolate experimental code and force stablization

	
 0.0.26b-000531:
 + TR mesh loading improvements for level and animation loading

	
 0.0.26b-000530:
 + File dialog now out of experimental
 * GLUT windowing control sucks - very limited control structure
    Looking into writing a better window control structure myself
 + New hack Window constructor
 * Hit a brick wall with C++ -> C function passing
    May not be possible to pass virtual &Window::Method 
	as a C function?	
 + New NeXt look for file dialog test, sweet  =)
 + Porting some mtk widgets to GL

	
 0.0.26b-000529:
 + Started on file dialog and directory reading 

	
 0.0.26b-000527:
 + TR animation support -> Experimental Egg animation format
 + More work on TR mesh loading and view modes
 + TR mesh loading is working very well ( corrected )
 + New Texture::PalColor
 + New drawing for egg and polygon for mixed color|texture models

	
 0.0.26b-000526:
 + Fixed TR textured rectangle logic error
 + New TR mesh combining improvements
 + New polygon drawing code, with support for rgb colored polygons
 + New texture edit switching
 + New texture editing for per texture edits
 + New TR mesh and animation loading ( still needs work )
	
 0.0.26b-000525:
 + Started New animation code
	
 0.0.26-000524:
 + Release
 + New release style 
 + GooseEgg print's now adds '\n' to DEBUG's console dump 
 * Note to self: Make Tree _class_ the new container for Egg v7
 + New Egg::DelGroup
 + New Egg::DeleteVertexInGroup
 + New Egg::DeleteVertexInAllGroups
 + New point delete algorithm ( never had a bug here, but... )
 + Texture editing now switches off in VIEW_MODEL_MODE != 0
 + Allows Save/Load of model w/o groups 
 + Fixed Save and Save group on NULL models
 + Fixed polygon delete
 + Fixed Prefab save logic error - this should've been reported
 + Updated docs with some FAQs
 + Using lara postion from TR map for init player pos
 + Corrected loading geometry of TR maps
	
 0.0.26pre4-000523:
 + Player view is now a stable feature MODEL_VIEW_MODE
 + Idle calls for repost all round ( hope it doesn't slow )
 + Replacing player view hack, it's becoming a new view mode
 + WIN32 port
	
 0.0.26pre3-000522:
 + New GL texture layout and use 
 + New mutliple texture support ( need to go back and clean up )
 + New level viewer renders lara.egg model in front of viewer
 + Fixed MDL texture mapping ( no one must be testing MDL )
 * Look for bugs causes by complete v6 rollover 
 + Dropping support for egg formats predating v6
 + New egg_vertex_t struct format, new vertex methods 
 + Prefabs now use Egg v6
 + Fixed vertex delete crash bug
 + Fixed some mesh texturing errors
 + Fixed 2 texture edit crash bugs
 + Removed tex edit check while in render mode ( this was a bug )
 + Changed RAW PPM as default texture save
 + Fixed RAW PPM loading ( was off by a byte, causing hue to distort )
 + New player movement code 
	
 0.0.25d-000521:
 + New map player viewer code ( sweet )
 + TR Map texture fixes
 + New model translate 
 + Fixed some bone issues with scaling and init
 + Fixed stupid logic error in Egg vertexfind
 + New TR map loading with sector offsets at load time
 + New texture editing ( this is getting slow )
 + New texture loading
 + New texture toggle works like you'd think now
 + Fixed texture window coloring bug
 + Fixed colormode
 * Planning new user and programmer interface to TR
	
 0.0.25-000520:
 + New OO main module rollover 
   ( to slowly rollover is the best way perhaps )
 + TR 1, UB, and 2 now fully load
 + Numerous tiny bug fixes for TR::Load and GUI
	
 0.0.23b-000519:
 + TR2 support working!
 + New poly look to help texture mapping
 + Fixed texture mapping - and it took a while ( wee )
 + Broke texture editing ( wee )
 + Reworked all texture code for new texturing method (finally done)
 * Soon egg_vertex_t will change to no longer having st feild 
 + EGG v6 no longer uses vertex coloring - new file format
 + Phasing out vertex Coloring and texture mapping 
 + New polygons fixed: mis mapping, tex editing, and many other bugs
 + MDl, MD2, and TR no longer use vertex coloring
 + New tex_edit window using new polygon textures
 + New draw_polygon - fixed a few bugs in it and added new
   polygon support
 + Got TR mapping prototype going
 + Once polygon mapping is done - start phasing out vertex (crutch)
 + New egg_polygon_t for handling polygon texture mapping
   as opposed to vertex texture mapping
 + Working on new texture mapping for TR models to use
 + Fixed on broken Texture windown mode toggle
 + Fixed RAW PPM Loading -- doh I forgot to fix it 
 + New NULL exception to Texture::Scale ( How'd we miss this? )
	
 0.0.23-000518:
 + New window init position
 + New Group remove code and GUI usage
 + Just notice there was no Group remove in the GUI  =)
 + Made group move move pivot too 
 + Fixed 'model mixing' pivot damage bug
 + I think vertex and polygon delete in Egg are fubar  =)
 + Finally getting around to Egg::DelPolygon
 + GUI command rearrangement and clean up ( agian )
 + Rip toggle in GUI
 + New methods in Texture class to ease ripping textures
 + New texture dumping feature for TR
 + New tombraider1.pal data file
 + New platette dumping for TR
 + Fixed TR up a great deal better
 * TombRaider Load error was in the bad file I/O 
   for unpacked structs ( now using __attribute__ ((packed)) )
 + Working on fixing TR
	
 0.0.21-000517:
 + Fixed EDIT reference to deleted vertex ( I think )
 + Fixed outdated AddPolygon calls in Egg
 + Fixed outdated AddPolygon calls in main.cpp
 + draw_strips usage fixed
 + Skeletal animation prototype 1 finished
	
 0.0.21-000516:
 + draw_strips for drawing bones
 + New "boned meshing" in gui, new colors, annd misc features 
 + Faster matrix math usage in Egg
 + New group rotation with kb
 + Egg v5: polygon textures, new file format, bone prototype
 + TR 4 testing -- adding working TR4 support
 + New polygon coloring and texturing support, for tomb raider
 + 99% TombRaider mesh loading - just need correct mesh combining
 + Better loading of meshes as group
 + Fixed TombRiader Coloured Quad error
 + Ditched new main module to fix some errors to the Egg design
 + New GL textbox and model loading in GooseEgg
 + Started on New OOD main module ( GooseEgg )
	
 0.0.19-000515:
 + Release
 + Atempted TR texture loading
 * Can't see where the vertex_list->vertex is being damaged (alloc?)
 + Fixed deleteing vertices from groups
 + Vertex delete now deletes all polygons using it
 + TombRaider meshtree flags working 
 + TombRaider mesh grouping is kind of working
 + TombRaider mesh loading is working pretty well
 + A little cleanup in main
 * Look for new bugs caused by PolyBuild rollover usage
 + Using new builder everywhere, since it seems to work so well
 + New POLY_SZ selector - lets you set polygon mode: tris, quads, ...
 + Now you can make multisided polygons in the modeler with ease
 + New Egg polygon generator methods
 + Put point color back in ( oops, I didn't mean to take it out )
	
 0.0.19-000514:
 + New cheap texture load guessing support
 + New TR loading from menu
 + New TR file header scanning
 + Fixed segfault on Render window click 
 + New TR 'movable' support started - can load it's vertices	
 * There maybe be errors in TombRaider affecting mesh loading
 * I need to go back and finish the TR loader for loading maps
 * TombRaider vertices load correctly now!
 + Should have *size* error fixed, now in Load and ExtractMesh
 * Found a huge error, *size* counts are for byte size, not object count
 + Fixed some TombRaider::ExtractMesh issues
 + Fixed some TombRaider::Load issues - this method is a hack
	
 0.0.19-000513:
 + Removed all endian support from TombRaider, due to odd linking
 + TombRaider 1, 2, 3, Unfinished Bussiness, and 4 support
	
 0.0.17b-000512:
 + Release
 + New RAW PPM Load in Texture
 + Fixed bad ASCII PPM loading in Texture
 + New RAW PPM Save in Texture
 + MDDC now has all it's code in mddc.cpp ( woah )
 + MDDC now has HEAVY_DEBUG build ability in a CLI switch
 + Moved PCX tools into Texture
 + LMP palette converter now in Texture
 + New Egg 'frames' protyping ( and removed it )
 + Toggle hexen2 | quake pal loading for MDL with '?'
 + New lmp2pal tool
 + Worked on mddc for a while -- it's doing a little better
 + MDLs now load their skin[0] texture automagically for the user 
 + Fixed several memory management issues in MDL and Texture
 + New menu layout and user prompting
 + Improved mdl and md2 converters
 + New methods in Mdl for better API
 + New texture loading in GUI
 + New texture palette file saving/loading
 + New texture loading from indexed image buffer support
	
 0.0.17-000511:
 + Mdl loading support
 + New model loading ( reads model header to determine type )
 + New Texture mapping with mouse support
 + New Textmap model view
 + New Texture scaling 
 + Md2 loading support
 + Prefabs are working now in V4
 + Going back to even number stable | odd number unstable
 + New coloring
	
 0.0.16b-000510:
 + New Prefab Save/Load and new file format  
 + New changes to GUI
 + Prefabs kind of working
 + Cleaning memory management
 + New allocation code
 + Removed joystick support
 + Prefabs now can have nested groups, st/rgb, and contained
 + Can now merge v4 and v2 EGGs
 + EGG v4 file I/O working
 + Lots of bug fixes from the rollover
 * I hope I can get this stable by 1700  =/
	
 0.0.16-000509: 
 + Redone most of main ( lacking the full poly support in gui )
 + Redone Egg class about 100% now
 + No longer limited to triangles - now does all polygons
 + Redesigned a lot of the main and Egg
 + New Egg method to load the old v2 files
 + New Egg v4 format 
   + Unifed data file
   + New data model design
	
 0.0.16-000508:
 + New texture loading support
 + New Fill function to load all vertex aux
 + Better POV output
 + New group rotation ( not whole model )

 0.0.15b-000507:
 + New 'simple minded' POV (povray) file output
	
 0.0.15-000506:
 + New Egg node aux field for texel coor or vertex color use
 + PPM and PCX Support rolled into new Texture class
 + Texture support is working
	
 0.0.14-000429:
 + MDL support in GooseEgg started
 + Texture mapping support started
 + New Makefile
 + New model scaling via kb
 + New auto rotation code and finer rotation angle
 + Minor bug fixes and optimizations
 + New PPM support
 + Started MDDC merge (got the trees merged at least)
	
 0.0.13-000426:
 + New text I/O ( output in render window only )
 * Removed old code, now only developing the GL version
 + GL port fixed and now supports all the old GGI code
 * Went back to old alpha numbering
 + Linux joystick support
	
 0.0.11-000424:
 + Started on GLUT port ( away from mtk )
 + Rotation of egg
 + New prefab functions
	
 0.0.10-000408:
 + Prefab I/O, and dynamic loading
 + Few minor bug fixes
 + Can now only group move using a vertex in the group
 + Added user definable prefabs!
	
 0.0.10-000407:
 + Cut out lines that would leave render window
 + Moved repeatisous listen code into a function 
	
 0.0.8-000405:
 + Group highlighting
 + Group file I/O in seperate file
 + Fixed group add
 + Fixed group move
 + Grouping works
 + Logging features





	
